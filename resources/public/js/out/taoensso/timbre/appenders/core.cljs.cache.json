["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$console",["^ ","~$trace",["^ "],"~$debug",["^ "],"~$info",["^ "],"~$warn",["^ "],"~$error",["^ "],"~$log",["^ "]],"~$Error",["^ "]],"~:use-macros",["^ ","~$have","~$taoensso.encore","~$have?","^="],"~:excludes",["~#set",[]],"~:name","~$taoensso.timbre.appenders.core","~:imports",null,"~:requires",["^ ","~$str","~$clojure.string","^F","^F","~$enc","^=","^=","^="],"~:cljs.spec/speced-vars",[],"~:uses",null,"~:defs",["^ ","~$println-appender",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/huxley/code/clojure/eckersdorf/resources/public/js/out/taoensso/timbre/appenders/core.cljs","~:line",29,"~:column",7,"~:end-line",29,"~:end-column",23,"~:arglists",["~#list",["~$quote",["^T",[["~$&",["~$_opts"]]]]]],"~:doc","Returns a simple `println` appender for Clojure/Script.\n  Use with ClojureScript requires that `cljs.core/*print-fn*` be set.\n\n  :stream (clj only) - e/o #{:auto :*out* :*err* :std-err :std-out <io-stream>}.","~:top-fn",["^ ","~:variadic",true,"~:max-fixed-arity",0,"~:method-params",[["^T",[["^V"]]]],"^S",["^T",[["~$&",["^V"]]]],"~:arglists-meta",["^T",[null]]]],"^A","~$taoensso.timbre.appenders.core/println-appender","^Y",true,"^N","resources/public/js/out/taoensso/timbre/appenders/core.cljs","^R",23,"^X",["^ ","^Y",true,"^Z",0,"^[",[["^T",[["^V"]]]],"^S",["^T",[["~$&",["^V"]]]],"^10",["^T",[null]]],"^[",[["^T",[["^V"]]]],"~:protocol-impl",null,"^10",["^T",[null]],"^P",1,"^O",29,"^Q",29,"^Z",0,"~:fn-var",true,"^S",["^T",[["~$&",["^V"]]]],"^W","Returns a simple `println` appender for Clojure/Script.\n  Use with ClojureScript requires that `cljs.core/*print-fn*` be set.\n\n  :stream (clj only) - e/o #{:auto :*out* :*err* :std-err :std-out <io-stream>}."],"~$console-appender",["^ ","^L",null,"^M",["^ ","^N","/home/huxley/code/clojure/eckersdorf/resources/public/js/out/taoensso/timbre/appenders/core.cljs","^O",104,"^P",7,"^Q",104,"^R",23,"^S",["^T",["^U",["^T",[["~$&",["~$opts"]]]]]],"^W","Returns a simple js/console appender for ClojureScript.\n\n  For accurate line numbers in Chrome, add these Blackbox[1] patterns:\n    `/taoensso/timbre/appenders/core\\.js$`\n    `/taoensso/timbre\\.js$`\n    `/cljs/core\\.js$`\n\n  [1] Ref. https://goo.gl/ZejSvR","^X",["^ ","^Y",true,"^Z",0,"^[",[["^T",[["^15"]]]],"^S",["^T",[["~$&",["^15"]]]],"^10",["^T",[null]]]],"^A","~$taoensso.timbre.appenders.core/console-appender","^Y",true,"^N","resources/public/js/out/taoensso/timbre/appenders/core.cljs","^R",23,"^X",["^ ","^Y",true,"^Z",0,"^[",[["^T",[["^15"]]]],"^S",["^T",[["~$&",["^15"]]]],"^10",["^T",[null]]],"^[",[["^T",[["^15"]]]],"^12",null,"^10",["^T",[null]],"^P",1,"^O",104,"^Q",104,"^Z",0,"^13",true,"^S",["^T",[["~$&",["^15"]]]],"^W","Returns a simple js/console appender for ClojureScript.\n\n  For accurate line numbers in Chrome, add these Blackbox[1] patterns:\n    `/taoensso/timbre/appenders/core\\.js$`\n    `/taoensso/timbre\\.js$`\n    `/cljs/core\\.js$`\n\n  [1] Ref. https://goo.gl/ZejSvR"],"~$console-?appender",["^ ","^A","~$taoensso.timbre.appenders.core/console-?appender","^N","resources/public/js/out/taoensso/timbre/appenders/core.cljs","^O",167,"^P",8,"^Q",167,"^R",30,"^M",["^ ","^N","/home/huxley/code/clojure/eckersdorf/resources/public/js/out/taoensso/timbre/appenders/core.cljs","^O",167,"^P",13,"^Q",167,"^R",30],"^W","DEPRECATED"]],"~:cljs.spec/registry-ref",[],"~:require-macros",["^ ","^G","^=","^=","^="],"~:cljs.analyzer/constants",["^ ","~:seen",["^@",["~:inherit","~:fn","~:rate-limit","~:vargs","~:output_","~:msg_","~:enabled?","~:level","~:output-fn","~:?err","~:min-level","~:raw-console?","~:?meta","~:async?"]],"~:order",["^1C","^1J","^1G","^1?","^1E","^1>","^1=","^1A","^1D","^1H","^1I","^1B","^1F","^1@"]],"^W","Core Timbre appenders without any special dependency requirements.\n  These can be aliased into the main Timbre ns for convenience."]