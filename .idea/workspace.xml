<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="2d15cdde-731e-425d-93a7-18dba581f6ee" name="Default" comment="">
      <change type="NEW" beforePath="" afterPath="$PROJECT_DIR$/src/cljs/eckersdorf/repl.cljs" />
      <change type="DELETED" beforePath="$PROJECT_DIR$/src/clj/eckersdorf/routes/services.clj" afterPath="" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/modules.xml" afterPath="$PROJECT_DIR$/.idea/modules.xml" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/vcs.xml" afterPath="$PROJECT_DIR$/.idea/vcs.xml" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/workspace.xml" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/eckersdorf.iml" afterPath="$PROJECT_DIR$/eckersdorf.iml" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/env/dev/clj/eckersdorf/repl.clj" afterPath="$PROJECT_DIR$/env/dev/clj/eckersdorf/repl.clj" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/figwheel_server.log" afterPath="$PROJECT_DIR$/figwheel_server.log" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/.figwheel-compile-stamp" afterPath="$PROJECT_DIR$/resources/public/js/out/.figwheel-compile-stamp" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/core.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/core.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/core.js" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/core.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/core.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/core.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/easy.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/easy.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/easy.js" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/easy.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/easy.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/easy.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/formats.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/formats.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/formats.js" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/formats.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/formats.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/formats.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/interceptors.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/interceptors.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/interceptors.js" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/interceptors.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/interceptors.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/interceptors.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/json.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/json.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/json.js" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/json.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/json.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/json.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/protocols.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/protocols.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/protocols.js" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/protocols.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/protocols.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/protocols.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/ring.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/ring.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/ring.js" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/ring.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/ring.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/ring.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/simple.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/simple.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/simple.js" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/simple.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/simple.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/simple.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/transit.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/transit.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/transit.js" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/transit.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/transit.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/transit.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/url.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/url.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/url.js" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/url.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/url.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/url.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/util.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/util.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/util.js" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/util.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/util.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/util.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/xhrio.js" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/xhrio.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/xhrio.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/xhrio.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/xml_http_request.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/xml_http_request.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/xml_http_request.js" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/xml_http_request.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/ajax/xml_http_request.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/ajax/xml_http_request.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/antizer/core.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/antizer/core.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/antizer/core.js" afterPath="$PROJECT_DIR$/resources/public/js/out/antizer/core.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/antizer/core.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/antizer/core.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/antizer/reagent.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/antizer/reagent.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/antizer/reagent.js" afterPath="$PROJECT_DIR$/resources/public/js/out/antizer/reagent.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/antizer/reagent.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/antizer/reagent.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/bardo/ease.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/bardo/ease.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/bardo/ease.js" afterPath="$PROJECT_DIR$/resources/public/js/out/bardo/ease.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/bardo/ease.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/bardo/ease.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/bardo/interpolate.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/bardo/interpolate.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/bardo/interpolate.js" afterPath="$PROJECT_DIR$/resources/public/js/out/bardo/interpolate.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/bardo/interpolate.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/bardo/interpolate.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/bardo/transition.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/bardo/transition.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/bardo/transition.js" afterPath="$PROJECT_DIR$/resources/public/js/out/bardo/transition.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/bardo/transition.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/bardo/transition.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/bidi/bidi.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/bidi/bidi.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/bidi/bidi.js" afterPath="$PROJECT_DIR$/resources/public/js/out/bidi/bidi.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/bidi/bidi.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/bidi/bidi.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/bidi/router.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/bidi/router.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/bidi/router.js" afterPath="$PROJECT_DIR$/resources/public/js/out/bidi/router.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/bidi/router.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/bidi/router.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/buffers.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/buffers.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/buffers.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/buffers.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/buffers.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/buffers.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/channels.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/channels.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/channels.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/channels.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/channels.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/channels.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/dispatch.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/dispatch.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/dispatch.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/dispatch.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/dispatch.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/dispatch.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/ioc_helpers.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/ioc_helpers.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/ioc_helpers.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/ioc_helpers.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/ioc_helpers.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/ioc_helpers.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/protocols.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/protocols.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/protocols.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/protocols.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/protocols.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/protocols.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/timers.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/timers.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/timers.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/timers.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/timers.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/async/impl/timers.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/match.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/match.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/match.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/match.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/core/match.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/core/match.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/pprint.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/pprint.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/pprint.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/pprint.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/pprint.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/pprint.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/reader.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/reader.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/reader.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/reader.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/reader.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/reader.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/repl.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/repl.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/repl.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/repl.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/repl.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/repl.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/spec/alpha.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/spec/alpha.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/spec/alpha.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/spec/alpha.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/spec/alpha.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/spec/alpha.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/spec/gen/alpha.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/spec/gen/alpha.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/spec/gen/alpha.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/spec/gen/alpha.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/spec/gen/alpha.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/spec/gen/alpha.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/stacktrace.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/stacktrace.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/stacktrace.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/stacktrace.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/stacktrace.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/stacktrace.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/test.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/test.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/test.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/test.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/test.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/test.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/edn.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/edn.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/edn.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/edn.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/edn.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/edn.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/impl/commons.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/impl/commons.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/impl/commons.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/impl/commons.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/impl/commons.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/impl/commons.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/impl/utils.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/impl/utils.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/impl/utils.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/impl/utils.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/impl/utils.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/impl/utils.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/reader_types.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/reader_types.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/reader_types.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/reader_types.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/reader_types.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs/tools/reader/reader_types.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs_time/coerce.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs_time/coerce.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs_time/coerce.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs_time/coerce.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs_time/coerce.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs_time/coerce.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs_time/core.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs_time/core.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs_time/core.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs_time/core.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs_time/core.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs_time/core.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs_time/format.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs_time/format.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs_time/format.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs_time/format.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs_time/format.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs_time/format.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs_time/internal/core.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs_time/internal/core.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs_time/internal/core.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs_time/internal/core.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs_time/internal/core.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs_time/internal/core.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs_time/internal/parse.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs_time/internal/parse.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs_time/internal/parse.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs_time/internal/parse.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs_time/internal/parse.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs_time/internal/parse.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs_time/internal/unparse.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs_time/internal/unparse.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs_time/internal/unparse.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs_time/internal/unparse.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs_time/internal/unparse.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs_time/internal/unparse.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs_time/periodic.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs_time/periodic.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs_time/periodic.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs_time/periodic.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cljs_time/periodic.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cljs_time/periodic.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/clojure/data.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/clojure/data.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/clojure/data.js" afterPath="$PROJECT_DIR$/resources/public/js/out/clojure/data.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/clojure/data.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/clojure/data.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/clojure/set.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/clojure/set.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/clojure/set.js" afterPath="$PROJECT_DIR$/resources/public/js/out/clojure/set.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/clojure/set.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/clojure/set.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/clojure/string.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/clojure/string.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/clojure/string.js" afterPath="$PROJECT_DIR$/resources/public/js/out/clojure/string.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/clojure/string.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/clojure/string.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/clojure/walk.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/clojure/walk.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/clojure/walk.js" afterPath="$PROJECT_DIR$/resources/public/js/out/clojure/walk.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/clojure/walk.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/clojure/walk.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cognitect/transit.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cognitect/transit.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cognitect/transit.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cognitect/transit.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cognitect/transit.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cognitect/transit.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cuerdas/core.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cuerdas/core.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cuerdas/core.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cuerdas/core.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cuerdas/core.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cuerdas/core.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cuerdas/regexp.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/cuerdas/regexp.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cuerdas/regexp.js" afterPath="$PROJECT_DIR$/resources/public/js/out/cuerdas/regexp.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/cuerdas/regexp.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/cuerdas/regexp.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/day8/re_frame/http_fx.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/day8/re_frame/http_fx.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/day8/re_frame/http_fx.js" afterPath="$PROJECT_DIR$/resources/public/js/out/day8/re_frame/http_fx.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/day8/re_frame/http_fx.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/day8/re_frame/http_fx.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/async.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/async.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/async.js" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/async.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/async.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/async.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/context.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/context.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/context.js" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/context.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/context.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/context.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/core.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/core.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/core.js" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/core.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/core.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/core.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/defaults.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/defaults.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/defaults.js" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/defaults.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/defaults.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/defaults.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/format.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/format.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/format.js" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/format.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/format.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/format.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters.js" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/budgeting.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/budgeting.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/budgeting.js" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/budgeting.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/budgeting.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/budgeting.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/core.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/core.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/core.js" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/core.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/core.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/core.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/helpers.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/helpers.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/helpers.js" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/helpers.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/helpers.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/helpers.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/markup.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/markup.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/markup.js" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/markup.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/markup.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/markup.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/printing.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/printing.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/printing.js" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/printing.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/printing.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/printing.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/state.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/state.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/state.js" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/state.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/state.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/state.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/templating.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/templating.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/templating.js" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/templating.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/templating.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/formatters/templating.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/hints.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/hints.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/hints.js" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/hints.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/hints.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/hints.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/munging.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/munging.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/munging.js" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/munging.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/munging.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/munging.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/prefs.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/prefs.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/prefs.js" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/prefs.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/prefs.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/prefs.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/preload.js" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/preload.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/preload.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/preload.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/protocols.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/protocols.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/protocols.js" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/protocols.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/protocols.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/protocols.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/reporter.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/reporter.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/reporter.js" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/reporter.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/reporter.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/reporter.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/toolbox.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/toolbox.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/toolbox.js" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/toolbox.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/toolbox.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/toolbox.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/util.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/util.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/util.js" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/util.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/util.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/util.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/version.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/version.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/version.js" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/version.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/devtools/version.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/devtools/version.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/app.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/app.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/app.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/app.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/core.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/core.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/core.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/core.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/core.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/core.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/csv/core.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/csv/core.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/csv/core.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/csv/core.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/csv/core.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/csv/core.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/db/core.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/db/core.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/db/core.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/db/core.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/db/core.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/db/core.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/db/events.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/db/events.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/db/events.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/db/events.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/db/specs.cljc" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/db/specs.cljc" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/db/specs.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/db/specs.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/db/specs.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/db/specs.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/db/specs.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/db/specs.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/error/db.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/error/db.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/error/db.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/error/db.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/error/db.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/error/db.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/error/events.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/error/events.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/error/events.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/error/events.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/error/subs.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/error/subs.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/error/subs.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/error/subs.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/events.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/events.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/events.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/events.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/flex.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/flex.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/flex.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/flex.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/flex.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/flex.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/init.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/init.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/init.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/init.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/process/db.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/process/db.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/process/db.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/process/db.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/process/db.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/process/db.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/process/events.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/process/events.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/process/events.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/process/events.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/process/subs.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/process/subs.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/process/subs.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/process/subs.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/repl.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/repl.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/repl.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/repl.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/routes/core.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/routes/core.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/routes/core.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/routes/core.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/routes/events.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/routes/events.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/routes/events.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/routes/events.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/db.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/db.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/db.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/db.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/db.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/db.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/events.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/events.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/events.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/events.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/login/db.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/login/db.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/login/db.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/login/db.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/login/db.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/login/db.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/login/events.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/login/events.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/login/events.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/login/events.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/login/subs.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/login/subs.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/login/subs.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/login/subs.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/login/ui.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/login/ui.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/login/ui.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/login/ui.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/login/ui.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/login/ui.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/subs.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/subs.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/subs.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/subs.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/ui.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/ui.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/ui.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/user/ui.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/utils.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/utils.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/utils.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/utils.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/utils.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/utils.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/view/db.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/view/db.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/view/db.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/view/db.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/view/db.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/view/db.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/view/events.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/view/events.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/view/events.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/view/events.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/view/subs.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/view/subs.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/view/subs.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/view/subs.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/view/ui.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/view/ui.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/view/ui.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/view/ui.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/view/ui.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/view/ui.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/window/db.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/window/db.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/window/db.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/window/db.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/window/db.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/window/db.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/window/events.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/window/events.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/window/events.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/window/events.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/window/subs.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/window/subs.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/window/subs.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/window/subs.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/db.cljs" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/db.cljs" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/db.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/db.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/db.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/db.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/db.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/db.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/events.cljs" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/events.cljs" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/events.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/events.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/events.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/events.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/events.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/events.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/subs.cljs" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/subs.cljs" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/subs.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/subs.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/subs.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/subs.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/subs.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/subs.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/ui.cljs" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/ui.cljs" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/ui.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/ui.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/ui.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/ui.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/ui.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/ui.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/utils.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/utils.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/utils.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/work_schedule/utils.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/db.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/db.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/db.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/db.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/db.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/db.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/events.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/events.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/events.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/events.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/events.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/events.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/subs.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/subs.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/subs.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/subs.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/subs.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/subs.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/ui.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/ui.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/ui.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/ui.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/ui.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workers/ui.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workplaces/db.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workplaces/db.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workplaces/db.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workplaces/db.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workplaces/db.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workplaces/db.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workplaces/events.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workplaces/events.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workplaces/events.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workplaces/events.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workplaces/subs.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workplaces/subs.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workplaces/subs.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workplaces/subs.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workplaces/ui.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workplaces/ui.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workplaces/ui.js" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workplaces/ui.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workplaces/ui.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/eckersdorf/workplaces/ui.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/figwheel/client.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/figwheel/client.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/figwheel/client.js" afterPath="$PROJECT_DIR$/resources/public/js/out/figwheel/client.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/figwheel/client.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/figwheel/client.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/file_reloading.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/file_reloading.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/file_reloading.js" afterPath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/file_reloading.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/file_reloading.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/file_reloading.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/heads_up.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/heads_up.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/heads_up.js" afterPath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/heads_up.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/heads_up.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/heads_up.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/socket.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/socket.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/socket.js" afterPath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/socket.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/socket.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/socket.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/utils.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/utils.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/utils.js" afterPath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/utils.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/utils.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/figwheel/client/utils.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/process/env.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/process/env.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/process/env.js" afterPath="$PROJECT_DIR$/resources/public/js/out/process/env.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/process/env.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/process/env.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/pushy/core.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/pushy/core.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/pushy/core.js" afterPath="$PROJECT_DIR$/resources/public/js/out/pushy/core.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/pushy/core.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/pushy/core.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/cofx.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/cofx.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/cofx.js" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/cofx.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/cofx.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/cofx.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/core.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/core.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/core.js" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/core.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/core.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/core.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/db.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/db.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/db.js" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/db.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/db.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/db.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/events.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/events.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/events.js" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/events.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/events.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/events.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/fx.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/fx.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/fx.js" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/fx.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/fx.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/fx.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/interceptor.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/interceptor.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/interceptor.js" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/interceptor.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/interceptor.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/interceptor.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/interop.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/interop.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/interop.js" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/interop.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/interop.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/interop.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/loggers.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/loggers.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/loggers.js" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/loggers.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/loggers.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/loggers.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/registrar.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/registrar.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/registrar.js" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/registrar.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/registrar.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/registrar.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/router.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/router.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/router.js" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/router.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/router.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/router.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/std_interceptors.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/std_interceptors.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/std_interceptors.js" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/std_interceptors.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/std_interceptors.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/std_interceptors.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/subs.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/subs.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/subs.js" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/subs.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/subs.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/subs.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/trace.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/trace.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/trace.js" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/trace.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/trace.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/trace.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/utils.cljc.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/utils.cljc.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/utils.js" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/utils.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/re_frame/utils.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/re_frame/utils.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/core.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/core.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/core.js" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/core.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/core.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/core.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/debug.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/debug.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/debug.js" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/debug.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/debug.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/debug.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/dom.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/dom.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/dom.js" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/dom.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/dom.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/dom.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/batching.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/batching.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/batching.js" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/batching.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/batching.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/batching.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/component.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/component.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/component.js" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/component.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/component.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/component.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/template.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/template.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/template.js" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/template.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/template.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/template.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/util.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/util.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/util.js" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/util.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/util.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/impl/util.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/interop.js" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/interop.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/interop.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/interop.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/ratom.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/ratom.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/ratom.js" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/ratom.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/reagent/ratom.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/reagent/ratom.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/taoensso/encore.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/taoensso/encore.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/taoensso/encore.js" afterPath="$PROJECT_DIR$/resources/public/js/out/taoensso/encore.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/taoensso/encore.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/taoensso/encore.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/taoensso/timbre.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/taoensso/timbre.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/taoensso/timbre.js" afterPath="$PROJECT_DIR$/resources/public/js/out/taoensso/timbre.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/taoensso/timbre.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/taoensso/timbre.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/taoensso/timbre/appenders/core.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/taoensso/timbre/appenders/core.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/taoensso/timbre/appenders/core.js" afterPath="$PROJECT_DIR$/resources/public/js/out/taoensso/timbre/appenders/core.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/taoensso/timbre/appenders/core.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/taoensso/timbre/appenders/core.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/taoensso/truss.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/taoensso/truss.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/taoensso/truss.js" afterPath="$PROJECT_DIR$/resources/public/js/out/taoensso/truss.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/taoensso/truss.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/taoensso/truss.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/taoensso/truss/impl.cljs.cache.json" afterPath="$PROJECT_DIR$/resources/public/js/out/taoensso/truss/impl.cljs.cache.json" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/taoensso/truss/impl.js" afterPath="$PROJECT_DIR$/resources/public/js/out/taoensso/truss/impl.js" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/resources/public/js/out/taoensso/truss/impl.js.map" afterPath="$PROJECT_DIR$/resources/public/js/out/taoensso/truss/impl.js.map" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/clj/eckersdorf/db/work_schedule.clj" afterPath="$PROJECT_DIR$/src/clj/eckersdorf/db/work_schedule.clj" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/clj/eckersdorf/routes/services/work_schedule.clj" afterPath="$PROJECT_DIR$/src/clj/eckersdorf/routes/services/work_schedule.clj" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/cljc/eckersdorf/db/specs.cljc" afterPath="$PROJECT_DIR$/src/cljc/eckersdorf/db/specs.cljc" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/cljs/eckersdorf/work_schedule/db.cljs" afterPath="$PROJECT_DIR$/src/cljs/eckersdorf/work_schedule/db.cljs" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/cljs/eckersdorf/work_schedule/events.cljs" afterPath="$PROJECT_DIR$/src/cljs/eckersdorf/work_schedule/events.cljs" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/cljs/eckersdorf/work_schedule/subs.cljs" afterPath="$PROJECT_DIR$/src/cljs/eckersdorf/work_schedule/subs.cljs" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/src/cljs/eckersdorf/work_schedule/ui.cljs" afterPath="$PROJECT_DIR$/src/cljs/eckersdorf/work_schedule/ui.cljs" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FavoritesManager">
    <favorites_list name="eckersdorf" />
  </component>
  <component name="FileColors">
    <fileColor scope="Non-Project Files (Material Default)" color="2E3C43" />
    <fileColor scope="Non-Project Files (Material Darker)" color="323232" />
    <fileColor scope="Non-Project Files (Material Lighter)" color="eae8e8" />
    <fileColor scope="Non-Project Files (Material Palenight)" color="2f2e43" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file leaf-file-name="ui.cljs" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/cljs/eckersdorf/work_schedule/ui.cljs">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="276">
              <caret line="129" column="40" lean-forward="false" selection-start-line="129" selection-start-column="40" selection-end-line="129" selection-end-column="40" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="work_schedule.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/clj/eckersdorf/db/work_schedule.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="220">
              <caret line="44" column="2" lean-forward="false" selection-start-line="44" selection-start-column="2" selection-end-line="44" selection-end-column="2" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="db.cljs" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/cljs/eckersdorf/work_schedule/db.cljs">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="345">
              <caret line="15" column="25" lean-forward="false" selection-start-line="15" selection-start-column="3" selection-end-line="15" selection-end-column="25" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="repl.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/env/dev/clj/eckersdorf/repl.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="289">
              <caret line="57" column="6" lean-forward="false" selection-start-line="57" selection-start-column="6" selection-end-line="57" selection-end-column="6" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="figwheel.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/env/dev/clj/eckersdorf/figwheel.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="69">
              <caret line="3" column="10" lean-forward="false" selection-start-line="3" selection-start-column="10" selection-end-line="3" selection-end-column="10" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="subs.cljs" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/cljs/eckersdorf/work_schedule/subs.cljs">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="299">
              <caret line="126" column="34" lean-forward="false" selection-start-line="126" selection-start-column="34" selection-end-line="126" selection-end-column="34" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="repl.cljs" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/cljs/eckersdorf/repl.cljs">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="69">
              <caret line="3" column="0" lean-forward="false" selection-start-line="3" selection-start-column="0" selection-end-line="3" selection-end-column="0" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="events.cljs" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/cljs/eckersdorf/work_schedule/events.cljs">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="215">
              <caret line="204" column="82" lean-forward="false" selection-start-line="204" selection-start-column="82" selection-end-line="204" selection-end-column="82" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="core.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/clj/eckersdorf/routes/core.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="0">
              <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="specs.cljc" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/cljc/eckersdorf/db/specs.cljc">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="2070">
              <caret line="90" column="25" lean-forward="false" selection-start-line="90" selection-start-column="25" selection-end-line="90" selection-end-column="25" />
              <folding />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="CLJC Namespace" />
        <option value="ClojureScript Namespace" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>elect</find>
      <find>:work-schedule/workplace</find>
      <find>timetable</find>
      <find>workers</find>
      <find>:work-schedule/schedule</find>
      <find>work-schedule/schedule</find>
      <find>to-strin</find>
      <find>to-string</find>
      <find>clear</find>
      <find>align-</find>
      <find>holiday</find>
      <find>dispatch</find>
      <find>edit</find>
      <find>edited</find>
      <find>from-string</find>
      <find>datetime da</find>
      <find>from-s</find>
      <find>=</find>
      <find>dt/from</find>
      <find>dtc/to-string</find>
      <find>dtc/from</find>
      <find>dtc</find>
      <find>set-edi</find>
      <find>set-ed</find>
      <find>work-cell</find>
      <find>print</find>
      <find>equal</find>
      <find>= dateim</find>
      <find>= date</find>
      <find>dtc/to</find>
    </findStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GradleLocalSettings">
    <option name="externalProjectsViewState">
      <projects_view />
    </option>
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/src/clj/eckersdorf/db/workplaces.clj" />
        <option value="$PROJECT_DIR$/src/clj/eckersdorf/layout.clj" />
        <option value="$PROJECT_DIR$/src/clj/eckersdorf/routes/services/workplaces.clj" />
        <option value="$PROJECT_DIR$/src/cljs/eckersdorf/workplaces/events.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/eckersdorf/workplaces/ui.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/eckersdorf/view/db.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/eckersdorf/view/events.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/eckersdorf/view/subs.cljs" />
        <option value="$PROJECT_DIR$/src/clj/eckersdorf/db/workers.clj" />
        <option value="$PROJECT_DIR$/src/cljs/eckersdorf/init.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/eckersdorf/db/events.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/eckersdorf/view/ui.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/eckersdorf/workers/db.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/eckersdorf/workplaces/subs.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/eckersdorf/core.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/eckersdorf/workers/subs.cljs" />
        <option value="$PROJECT_DIR$/src/cljc/eckersdorf/utils.cljc" />
        <option value="$PROJECT_DIR$/src/clj/eckersdorf/routes/services/workers.clj" />
        <option value="$PROJECT_DIR$/src/cljs/eckersdorf/workers/events.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/eckersdorf/workers/ui.cljs" />
        <option value="$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/init.cljs" />
        <option value="$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/workers/db.cljs" />
        <option value="$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/workers/events.cljs" />
        <option value="$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/db/events.cljs" />
        <option value="$USER_HOME$/data/code/Clojure/eckersdorf/src/clj/eckersdorf/db/timetable.clj" />
        <option value="$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/timetable/db.cljs" />
        <option value="$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/timetable/events.cljs" />
        <option value="$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/timetable/subs.cljs" />
        <option value="$USER_HOME$/data/code/Clojure/eckersdorf/src/clj/eckersdorf/db/work_schedule.clj" />
        <option value="$USER_HOME$/data/code/Clojure/eckersdorf/src/clj/eckersdorf/routes/services/work-schedule.clj" />
        <option value="$USER_HOME$/data/code/Clojure/eckersdorf/env/dev/clj/eckersdorf/repl.clj" />
        <option value="$USER_HOME$/data/code/Clojure/eckersdorf/src/clj/eckersdorf/routes/services/work_schedule.clj" />
        <option value="$USER_HOME$/data/code/Clojure/eckersdorf/src/cljc/eckersdorf/db/specs.cljc" />
        <option value="$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/workers/subs.cljs" />
        <option value="$USER_HOME$/data/code/Clojure/eckersdorf/src/clj/eckersdorf/routes/services/core.clj" />
        <option value="$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/work_schedule/utils.cljs" />
        <option value="$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/work_schedule/db.cljs" />
        <option value="$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/work_schedule/subs.cljs" />
        <option value="$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/flex.cljs" />
        <option value="$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/view/ui.cljs" />
        <option value="$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/work_schedule/ui.cljs" />
        <option value="$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/work_schedule/events.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/eckersdorf/work_schedule/db.cljs" />
        <option value="$PROJECT_DIR$/src/clj/eckersdorf/routes/services/work_schedule.clj" />
        <option value="$PROJECT_DIR$/src/cljc/eckersdorf/db/specs.cljc" />
        <option value="$PROJECT_DIR$/src/clj/eckersdorf/db/work_schedule.clj" />
        <option value="$PROJECT_DIR$/env/dev/clj/eckersdorf/repl.clj" />
        <option value="$PROJECT_DIR$/src/cljs/eckersdorf/repl.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/eckersdorf/work_schedule/subs.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/eckersdorf/work_schedule/ui.cljs" />
        <option value="$PROJECT_DIR$/src/cljs/eckersdorf/work_schedule/events.cljs" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="NodeModulesDirectoryManager">
    <handled-path value="$PROJECT_DIR$/node_modules" />
  </component>
  <component name="ProjectFrameBounds">
    <option name="x" value="13" />
    <option name="y" value="12" />
    <option name="width" value="1340" />
    <option name="height" value="743" />
  </component>
  <component name="ProjectInspectionProfilesVisibleTreeState">
    <entry key="Project Default">
      <profile-state>
        <expanded-state>
          <State>
            <id />
          </State>
          <State>
            <id>Android &gt; Lint &gt; Correctness</id>
          </State>
          <State>
            <id>Android &gt; Lint &gt; Usability &gt; Typography</id>
          </State>
          <State>
            <id>Assignment issuesGroovy</id>
          </State>
          <State>
            <id>Assignment issuesJava</id>
          </State>
          <State>
            <id>Bitwise operation issuesJavaScript</id>
          </State>
          <State>
            <id>Control flow issuesJava</id>
          </State>
          <State>
            <id>GeneralJavaScript</id>
          </State>
          <State>
            <id>Groovy</id>
          </State>
          <State>
            <id>Java</id>
          </State>
          <State>
            <id>JavaScript</id>
          </State>
          <State>
            <id>Potentially confusing code constructsGroovy</id>
          </State>
          <State>
            <id>Potentially confusing code constructsJavaScript</id>
          </State>
          <State>
            <id>Probable bugsGroovy</id>
          </State>
          <State>
            <id>Probable bugsJava</id>
          </State>
          <State>
            <id>Probable bugsJavaScript</id>
          </State>
          <State>
            <id>Spelling</id>
          </State>
          <State>
            <id>Threading issuesGroovy</id>
          </State>
          <State>
            <id>Threading issuesJava</id>
          </State>
          <State>
            <id>UI Form Problems</id>
          </State>
          <State>
            <id>XPath</id>
          </State>
        </expanded-state>
        <selected-state>
          <State>
            <id>SpellCheckingInspection</id>
          </State>
        </selected-state>
      </profile-state>
    </entry>
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
      <manualOrder />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="PackagesPane" />
      <pane id="Scope" />
      <pane id="Scratches" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="eckersdorf" type="b2602c69:ProjectViewProjectNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="eckersdorf" type="b2602c69:ProjectViewProjectNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
              <item name="env" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="eckersdorf" type="b2602c69:ProjectViewProjectNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
              <item name="env" type="462c0819:PsiDirectoryNode" />
              <item name="dev" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="eckersdorf" type="b2602c69:ProjectViewProjectNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
              <item name="env" type="462c0819:PsiDirectoryNode" />
              <item name="dev" type="462c0819:PsiDirectoryNode" />
              <item name="clj" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="eckersdorf" type="b2602c69:ProjectViewProjectNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
              <item name="env" type="462c0819:PsiDirectoryNode" />
              <item name="dev" type="462c0819:PsiDirectoryNode" />
              <item name="clj" type="462c0819:PsiDirectoryNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="eckersdorf" type="b2602c69:ProjectViewProjectNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="eckersdorf" type="b2602c69:ProjectViewProjectNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="clj" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="eckersdorf" type="b2602c69:ProjectViewProjectNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="clj" type="462c0819:PsiDirectoryNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="eckersdorf" type="b2602c69:ProjectViewProjectNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="clj" type="462c0819:PsiDirectoryNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
              <item name="db" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="eckersdorf" type="b2602c69:ProjectViewProjectNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="clj" type="462c0819:PsiDirectoryNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
              <item name="routes" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="eckersdorf" type="b2602c69:ProjectViewProjectNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="clj" type="462c0819:PsiDirectoryNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
              <item name="routes" type="462c0819:PsiDirectoryNode" />
              <item name="services" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="eckersdorf" type="b2602c69:ProjectViewProjectNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="cljc" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="eckersdorf" type="b2602c69:ProjectViewProjectNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="cljc" type="462c0819:PsiDirectoryNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="eckersdorf" type="b2602c69:ProjectViewProjectNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="cljc" type="462c0819:PsiDirectoryNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
              <item name="db" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="eckersdorf" type="b2602c69:ProjectViewProjectNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="cljs" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="eckersdorf" type="b2602c69:ProjectViewProjectNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="cljs" type="462c0819:PsiDirectoryNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="eckersdorf" type="b2602c69:ProjectViewProjectNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="cljs" type="462c0819:PsiDirectoryNode" />
              <item name="eckersdorf" type="462c0819:PsiDirectoryNode" />
              <item name="work_schedule" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
      <pane id="AndroidView" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="GoToClass.includeLibraries" value="false" />
    <property name="GoToClass.toSaveIncludeLibraries" value="false" />
    <property name="GoToFile.includeJavaFiles" value="false" />
    <property name="MemberChooser.sorted" value="false" />
    <property name="MemberChooser.showClasses" value="true" />
    <property name="MemberChooser.copyJavadoc" value="false" />
    <property name="settings.editor.selected.configurable" value="Errors" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="project.structure.last.edited" value="Modules" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.0" />
    <property name="cursive.last.file.extension./home/huxley/code/clojure/eckersdorf/src/cljc" value="cljc" />
    <property name="cursive.last.file.extension./home/huxley/data/code/Clojure/eckersdorf/src/cljs" value="cljs" />
    <property name="nodejs_interpreter_path" value="/usr/bin/node" />
    <property name="cursive.last.file.extension./home/huxley/code/clojure/eckersdorf/src/cljs" value="cljs" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$USER_HOME$/data/code/Clojure/eckersdorf/src/clj/eckersdorf/routes/services" />
      <recent name="$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/work_schedule" />
      <recent name="$PROJECT_DIR$/src/cljs/eckersdorf" />
    </key>
  </component>
  <component name="ReplState" timestamp="1509146561493">{:repl-history {:ide [], :local [{:command &quot;(defn workplaces-routes [db]\n  [\&quot;/workplaces\&quot;\n   [\n    [\&quot;\&quot; (yada/resource\n          {:methods\n           {:get\n            {:produces #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :response (fn [ctx]\n                         (let [opts (-&gt;&gt; (get-in ctx [:parameters :query])\n                                         (reduce (fn [r [k v]]\n                                                   (assoc r k {\&quot;$regex\&quot;   v\n                                                               \&quot;$options\&quot; \&quot;i\&quot;})) {}))]\n                           (db.workplaces/workplaces-list db opts)))}\n            :post\n            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :consumes   #{\&quot;application/json\&quot; \&quot;application/x-www-form-urlencoded\&quot;}\n             :parameters {:body {:name          schema/Str\n                                 :email-address schema/Str\n                                 :address {schema/Keyword schema/Str}}}\n             :response   (fn [ctx]\n                           (let [address-name (get-in ctx [:parameters :body :short-name])]\n                             (println (get-in ctx [:parameters :body]))\n                             (assoc (:response ctx) :status 404)))}}})]\n    ;[\&quot;/add\&quot; (yada/resource\n    ;          {:methods\n    ;           {:post\n    ;            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n    ;             :consumes   \&quot;application/x-www-form-urlencoded\&quot;\n    ;             :parameters {:body {:email-address schema/Str\n    ;                                 :password      schema/Str\n    ;                                 :first-name    schema/Str\n    ;                                 :last-name     schema/Str}}\n    ;             :response   (fn [ctx]\n    ;                           (let [{:keys [email-address password first-name\n    ;                                         last-name]} (get-in ctx [:parameters :body])]\n    ;                             (if-not (db.users/find-user-by-email-address db email-address)\n    ;                               (let [user (db.users/create-user db {:user/first-name    first-name\n    ;                                                                    :user/last-name     last-name\n    ;                                                                    :user/password      password\n    ;                                                                    :user/email-address email-address})]\n    ;                                 ;(postman/send-activation-email user)\n    ;                                 (dissoc user :user/password))\n    ;                               (assoc (:response ctx) :status 500 :body {:error \&quot;user exists\&quot;}))))}}})]\n    ]])&quot;, :offset 2648, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(reduce (fn [m [k v]]\n          (assoc m (keyword \&quot;workplace\&quot; k) v)) {} {:name \&quot;proboszczow\&quot;, :email-address \&quot;s-3@teas.com.pl\&quot;, :address {:street-name \&quot;proboszczow\&quot;, :street-number \&quot;33a\&quot;, :zip-code \&quot;59-516\&quot;, :city \&quot;pielgrzymka\&quot;}})&quot;, :offset 230, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(reduce (fn [m [k v]]\n          (assoc m (keyword :workplace k) v)) {} {:name \&quot;proboszczow\&quot;, :email-address \&quot;s-3@teas.com.pl\&quot;, :address {:street-name \&quot;proboszczow\&quot;, :street-number \&quot;33a\&quot;, :zip-code \&quot;59-516\&quot;, :city \&quot;pielgrzymka\&quot;}})&quot;, :offset 229, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(reduce (fn [m [k v]]\n          (assoc m (keyword :workplace k) v)) {} \n        {:name \&quot;proboszczow\&quot;, :email-address \&quot;s-3@teas.com.pl\&quot;, :address {:street-name \&quot;proboszczow\&quot;, :street-number \&quot;33a\&quot;, :zip-code \&quot;59-516\&quot;, :city \&quot;pielgrzymka\&quot;}})&quot;, :offset 238, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(reduce (fn [m [k v]]\n          (println m k v)\n          (assoc m (keyword :workplace k) v)) {} \n        {:name \&quot;proboszczow\&quot;, :email-address \&quot;s-3@teas.com.pl\&quot;, :address {:street-name \&quot;proboszczow\&quot;, :street-number \&quot;33a\&quot;, :zip-code \&quot;59-516\&quot;, :city \&quot;pielgrzymka\&quot;}})&quot;, :offset 264, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(keyword :bla :ble)&quot;, :offset 19, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(keyword \&quot;bla\&quot; :ble)&quot;, :offset 20, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(keyword \&quot;bla\&quot; \&quot;ble\&quot;)&quot;, :offset 21, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(reduce (fn [m [k v]]\n          (println m k v)\n          (assoc m (keyword \&quot;workplace\&quot; (name k)) v)) {} \n        {:name \&quot;proboszczow\&quot;, :email-address \&quot;s-3@teas.com.pl\&quot;, :address {:street-name \&quot;proboszczow\&quot;, :street-number \&quot;33a\&quot;, :zip-code \&quot;59-516\&quot;, :city \&quot;pielgrzymka\&quot;}})&quot;, :offset 272, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(defn add-ns [ns m]\n  (reduce (fn [ret [k v]]\n            (assoc ret (keyword (name ns) (name k)) v))\n          m))&quot;, :offset 115, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(defn add-ns [ns m]\n  (reduce (fn [ret [k v]]\n            (assoc ret (keyword (name ns) (name k)) v))\n          {} m))&quot;, :offset 118, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(add-ns :workplace {:name \&quot;proboszczow\&quot;, :email-address \&quot;s-3@teas.com.pl\&quot;, :address {:street-name \&quot;proboszczow\&quot;, :street-number \&quot;33a\&quot;, :zip-code \&quot;59-516\&quot;, :city \&quot;pielgrzymka\&quot;}})&quot;, :offset 177, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(defn workplaces-routes [db]\n  [\&quot;/workplaces\&quot;\n   [\n    [\&quot;\&quot; (yada/resource\n          {:methods\n           {:get\n            {:produces #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :response (fn [ctx]\n                         (let [opts (-&gt;&gt; (get-in ctx [:parameters :query])\n                                         (reduce (fn [r [k v]]\n                                                   (assoc r k {\&quot;$regex\&quot;   v\n                                                               \&quot;$options\&quot; \&quot;i\&quot;})) {}))]\n                           (db.workplaces/workplaces-list db opts)))}\n            :post\n            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :consumes   #{\&quot;application/json\&quot; \&quot;application/x-www-form-urlencoded\&quot;}\n             :parameters {:body {:name          schema/Str\n                                 :email-address schema/Str\n                                 :address       {schema/Keyword schema/Str}}}\n             :response   (fn [ctx]\n                           (let [address (add-ns :address (get-in ctx [:parameters :body :address]))\n                                 workplace (-&gt;&gt; (get-in ctx [:parameters :body])\n                                                (add-ns :workplace)\n                                                (update :address add-ns :address))]\n                             (println workplace)\n                             (assoc (:response ctx) :status 404)))}}})]\n    ;[\&quot;/add\&quot; (yada/resource\n    ;          {:methods\n    ;           {:post\n    ;            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n    ;             :consumes   \&quot;application/x-www-form-urlencoded\&quot;\n    ;             :parameters {:body {:email-address schema/Str\n    ;                                 :password      schema/Str\n    ;                                 :first-name    schema/Str\n    ;                                 :last-name     schema/Str}}\n    ;             :response   (fn [ctx]\n    ;                           (let [{:keys [email-address password first-name\n    ;                                         last-name]} (get-in ctx [:parameters :body])]\n    ;                             (if-not (db.users/find-user-by-email-address db email-address)\n    ;                               (let [user (db.users/create-user db {:user/first-name    first-name\n    ;                                                                    :user/last-name     last-name\n    ;                                                                    :user/password      password\n    ;                                                                    :user/email-address email-address})]\n    ;                                 ;(postman/send-activation-email user)\n    ;                                 (dissoc user :user/password))\n    ;                               (assoc (:response ctx) :status 500 :body {:error \&quot;user exists\&quot;}))))}}})]\n    ]])&quot;, :offset 2873, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(defn add-ns [m ns]\n  (reduce (fn [ret [k v]]\n            (assoc ret (keyword (name ns) (name k)) v))\n          {} m))&quot;, :offset 118, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(defn workplaces-routes [db]\n  [\&quot;/workplaces\&quot;\n   [\n    [\&quot;\&quot; (yada/resource\n          {:methods\n           {:get\n            {:produces #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :response (fn [ctx]\n                         (let [opts (-&gt;&gt; (get-in ctx [:parameters :query])\n                                         (reduce (fn [r [k v]]\n                                                   (assoc r k {\&quot;$regex\&quot;   v\n                                                               \&quot;$options\&quot; \&quot;i\&quot;})) {}))]\n                           (db.workplaces/workplaces-list db opts)))}\n            :post\n            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :consumes   #{\&quot;application/json\&quot; \&quot;application/x-www-form-urlencoded\&quot;}\n             :parameters {:body {:name          schema/Str\n                                 :email-address schema/Str\n                                 :address       {schema/Keyword schema/Str}}}\n             :response   (fn [ctx]\n                           (let [address (add-ns :address (get-in ctx [:parameters :body :address]))\n                                 workplace (-&gt; (get-in ctx [:parameters :body])\n                                               (add-ns :workplace)\n                                               (update :address add-ns :address))]\n                             (println workplace)\n                             (assoc (:response ctx) :status 404)))}}})]\n    ;[\&quot;/add\&quot; (yada/resource\n    ;          {:methods\n    ;           {:post\n    ;            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n    ;             :consumes   \&quot;application/x-www-form-urlencoded\&quot;\n    ;             :parameters {:body {:email-address schema/Str\n    ;                                 :password      schema/Str\n    ;                                 :first-name    schema/Str\n    ;                                 :last-name     schema/Str}}\n    ;             :response   (fn [ctx]\n    ;                           (let [{:keys [email-address password first-name\n    ;                                         last-name]} (get-in ctx [:parameters :body])]\n    ;                             (if-not (db.users/find-user-by-email-address db email-address)\n    ;                               (let [user (db.users/create-user db {:user/first-name    first-name\n    ;                                                                    :user/last-name     last-name\n    ;                                                                    :user/password      password\n    ;                                                                    :user/email-address email-address})]\n    ;                                 ;(postman/send-activation-email user)\n    ;                                 (dissoc user :user/password))\n    ;                               (assoc (:response ctx) :status 500 :body {:error \&quot;user exists\&quot;}))))}}})]\n    ]])&quot;, :offset 2870, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(defn workplaces-routes [db]\n  [\&quot;/workplaces\&quot;\n   [\n    [\&quot;\&quot; (yada/resource\n          {:methods\n           {:get\n            {:produces #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :response (fn [ctx]\n                         (let [opts (-&gt;&gt; (get-in ctx [:parameters :query])\n                                         (reduce (fn [r [k v]]\n                                                   (assoc r k {\&quot;$regex\&quot;   v\n                                                               \&quot;$options\&quot; \&quot;i\&quot;})) {}))]\n                           (db.workplaces/workplaces-list db opts)))}\n            :post\n            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :consumes   #{\&quot;application/json\&quot; \&quot;application/x-www-form-urlencoded\&quot;}\n             :parameters {:body {:name          schema/Str\n                                 :email-address schema/Str\n                                 :address       {schema/Keyword schema/Str}}}\n             :response   (fn [ctx]\n                           (let [address (add-ns (get-in ctx [:parameters :body :address]) :address)\n                                 workplace (-&gt; (get-in ctx [:parameters :body])\n                                               (add-ns :workplace)\n                                               (update :address add-ns :address))]\n                             (println workplace)\n                             (assoc (:response ctx) :status 404)))}}})]\n    ;[\&quot;/add\&quot; (yada/resource\n    ;          {:methods\n    ;           {:post\n    ;            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n    ;             :consumes   \&quot;application/x-www-form-urlencoded\&quot;\n    ;             :parameters {:body {:email-address schema/Str\n    ;                                 :password      schema/Str\n    ;                                 :first-name    schema/Str\n    ;                                 :last-name     schema/Str}}\n    ;             :response   (fn [ctx]\n    ;                           (let [{:keys [email-address password first-name\n    ;                                         last-name]} (get-in ctx [:parameters :body])]\n    ;                             (if-not (db.users/find-user-by-email-address db email-address)\n    ;                               (let [user (db.users/create-user db {:user/first-name    first-name\n    ;                                                                    :user/last-name     last-name\n    ;                                                                    :user/password      password\n    ;                                                                    :user/email-address email-address})]\n    ;                                 ;(postman/send-activation-email user)\n    ;                                 (dissoc user :user/password))\n    ;                               (assoc (:response ctx) :status 500 :body {:error \&quot;user exists\&quot;}))))}}})]\n    ]])&quot;, :offset 2870, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(defn workplaces-routes [db]\n  [\&quot;/workplaces\&quot;\n   [\n    [\&quot;\&quot; (yada/resource\n          {:methods\n           {:get\n            {:produces #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :response (fn [ctx]\n                         (let [opts (-&gt;&gt; (get-in ctx [:parameters :query])\n                                         (reduce (fn [r [k v]]\n                                                   (assoc r k {\&quot;$regex\&quot;   v\n                                                               \&quot;$options\&quot; \&quot;i\&quot;})) {}))]\n                           (db.workplaces/workplaces-list db opts)))}\n            :post\n            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :consumes   #{\&quot;application/json\&quot; \&quot;application/x-www-form-urlencoded\&quot;}\n             :parameters {:body {:name          schema/Str\n                                 :email-address schema/Str\n                                 :address       {schema/Keyword schema/Str}}}\n             :response   (fn [ctx]\n                           (let [address (add-ns (get-in ctx [:parameters :body :address]) :address)\n                                 workplace (-&gt; (get-in ctx [:parameters :body])\n                                               (add-ns :workplace)\n                                               (update :workplace/address add-ns :address))]\n                             (println workplace)\n                             (assoc (:response ctx) :status 404)))}}})]\n    ;[\&quot;/add\&quot; (yada/resource\n    ;          {:methods\n    ;           {:post\n    ;            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n    ;             :consumes   \&quot;application/x-www-form-urlencoded\&quot;\n    ;             :parameters {:body {:email-address schema/Str\n    ;                                 :password      schema/Str\n    ;                                 :first-name    schema/Str\n    ;                                 :last-name     schema/Str}}\n    ;             :response   (fn [ctx]\n    ;                           (let [{:keys [email-address password first-name\n    ;                                         last-name]} (get-in ctx [:parameters :body])]\n    ;                             (if-not (db.users/find-user-by-email-address db email-address)\n    ;                               (let [user (db.users/create-user db {:user/first-name    first-name\n    ;                                                                    :user/last-name     last-name\n    ;                                                                    :user/password      password\n    ;                                                                    :user/email-address email-address})]\n    ;                                 ;(postman/send-activation-email user)\n    ;                                 (dissoc user :user/password))\n    ;                               (assoc (:response ctx) :status 500 :body {:error \&quot;user exists\&quot;}))))}}})]\n    ]])&quot;, :offset 2880, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(defn workplaces-routes [db]\n  [\&quot;/workplaces\&quot;\n   [\n    [\&quot;\&quot; (yada/resource\n          {:methods\n           {:get\n            {:produces #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :response (fn [ctx]\n                         (let [opts (-&gt;&gt; (get-in ctx [:parameters :query])\n                                         (reduce (fn [r [k v]]\n                                                   (assoc r k {\&quot;$regex\&quot;   v\n                                                               \&quot;$options\&quot; \&quot;i\&quot;})) {}))]\n                           (db.workplaces/workplaces-list db opts)))}\n            :post\n            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :consumes   #{\&quot;application/json\&quot; \&quot;application/x-www-form-urlencoded\&quot;}\n             :parameters {:body {:name          schema/Str\n                                 :email-address schema/Str\n                                 :address       {schema/Keyword schema/Str}}}\n             :response   (fn [ctx]\n                           (let [address (add-ns (get-in ctx [:parameters :body :address]) :address)\n                                 workplace (-&gt; (get-in ctx [:parameters :body])\n                                               (add-ns :workplace)\n                                               (update :workplace/address add-ns :address))]\n                             (if-let [response true]\n                               (:response ctx)\n                               (assoc (:response ctx) :status 404))))}}})]\n    ;[\&quot;/add\&quot; (yada/resource\n    ;          {:methods\n    ;           {:post\n    ;            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n    ;             :consumes   \&quot;application/x-www-form-urlencoded\&quot;\n    ;             :parameters {:body {:email-address schema/Str\n    ;                                 :password      schema/Str\n    ;                                 :first-name    schema/Str\n    ;                                 :last-name     schema/Str}}\n    ;             :response   (fn [ctx]\n    ;                           (let [{:keys [email-address password first-name\n    ;                                         last-name]} (get-in ctx [:parameters :body])]\n    ;                             (if-not (db.users/find-user-by-email-address db email-address)\n    ;                               (let [user (db.users/create-user db {:user/first-name    first-name\n    ;                                                                    :user/last-name     last-name\n    ;                                                                    :user/password      password\n    ;                                                                    :user/email-address email-address})]\n    ;                                 ;(postman/send-activation-email user)\n    ;                                 (dissoc user :user/password))\n    ;                               (assoc (:response ctx) :status 500 :body {:error \&quot;user exists\&quot;}))))}}})]\n    ]])&quot;, :offset 2934, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(defn workplaces-routes [db]\n  [\&quot;/workplaces\&quot;\n   [\n    [\&quot;\&quot; (yada/resource\n          {:methods\n           {:get\n            {:produces #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :response (fn [ctx]\n                         (let [opts (-&gt;&gt; (get-in ctx [:parameters :query])\n                                         (reduce (fn [r [k v]]\n                                                   (assoc r k {\&quot;$regex\&quot;   v\n                                                               \&quot;$options\&quot; \&quot;i\&quot;})) {}))]\n                           (db.workplaces/workplaces-list db opts)))}\n            :post\n            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :consumes   #{\&quot;application/json\&quot; \&quot;application/x-www-form-urlencoded\&quot;}\n             :parameters {:body {:name          schema/Str\n                                 :email-address schema/Str\n                                 :address       {schema/Keyword schema/Str}}}\n             :response   (fn [ctx]\n                           (let [address (add-ns (get-in ctx [:parameters :body :address]) :address)\n                                 workplace (-&gt; (get-in ctx [:parameters :body])\n                                               (add-ns :workplace)\n                                               (update :workplace/address add-ns :address))]\n                             (if-let [response true]\n                               {:a \&quot;sex\&quot;}\n                               (assoc (:response ctx) :status 404))))}}})]\n    ;[\&quot;/add\&quot; (yada/resource\n    ;          {:methods\n    ;           {:post\n    ;            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n    ;             :consumes   \&quot;application/x-www-form-urlencoded\&quot;\n    ;             :parameters {:body {:email-address schema/Str\n    ;                                 :password      schema/Str\n    ;                                 :first-name    schema/Str\n    ;                                 :last-name     schema/Str}}\n    ;             :response   (fn [ctx]\n    ;                           (let [{:keys [email-address password first-name\n    ;                                         last-name]} (get-in ctx [:parameters :body])]\n    ;                             (if-not (db.users/find-user-by-email-address db email-address)\n    ;                               (let [user (db.users/create-user db {:user/first-name    first-name\n    ;                                                                    :user/last-name     last-name\n    ;                                                                    :user/password      password\n    ;                                                                    :user/email-address email-address})]\n    ;                                 ;(postman/send-activation-email user)\n    ;                                 (dissoc user :user/password))\n    ;                               (assoc (:response ctx) :status 500 :body {:error \&quot;user exists\&quot;}))))}}})]\n    ]])&quot;, :offset 2929, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(defn workplaces-routes [db]\n  [\&quot;/workplaces\&quot;\n   [\n    [\&quot;\&quot; (yada/resource\n          {:methods\n           {:get\n            {:produces #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :response (fn [ctx]\n                         (let [opts (-&gt;&gt; (get-in ctx [:parameters :query])\n                                         (reduce (fn [r [k v]]\n                                                   (assoc r k {\&quot;$regex\&quot;   v\n                                                               \&quot;$options\&quot; \&quot;i\&quot;})) {}))]\n                           (db.workplaces/workplaces-list db opts)))}\n            :post\n            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :consumes   #{\&quot;application/json\&quot; \&quot;application/x-www-form-urlencoded\&quot;}\n             :parameters {:body {:name          schema/Str\n                                 :email-address schema/Str\n                                 :address       {schema/Keyword schema/Str}}}\n             :response   (fn [ctx]\n                           (let [address (add-ns (get-in ctx [:parameters :body :address]) :address)\n                                 workplace (-&gt; (get-in ctx [:parameters :body])\n                                               (add-ns :workplace)\n                                               (update :workplace/address add-ns :address))]\n                             (if-let [response true]\n                               (println ctx)\n                               (assoc (:response ctx) :status 404))))}}})]\n    ;[\&quot;/add\&quot; (yada/resource\n    ;          {:methods\n    ;           {:post\n    ;            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n    ;             :consumes   \&quot;application/x-www-form-urlencoded\&quot;\n    ;             :parameters {:body {:email-address schema/Str\n    ;                                 :password      schema/Str\n    ;                                 :first-name    schema/Str\n    ;                                 :last-name     schema/Str}}\n    ;             :response   (fn [ctx]\n    ;                           (let [{:keys [email-address password first-name\n    ;                                         last-name]} (get-in ctx [:parameters :body])]\n    ;                             (if-not (db.users/find-user-by-email-address db email-address)\n    ;                               (let [user (db.users/create-user db {:user/first-name    first-name\n    ;                                                                    :user/last-name     last-name\n    ;                                                                    :user/password      password\n    ;                                                                    :user/email-address email-address})]\n    ;                                 ;(postman/send-activation-email user)\n    ;                                 (dissoc user :user/password))\n    ;                               (assoc (:response ctx) :status 500 :body {:error \&quot;user exists\&quot;}))))}}})]\n    ]])&quot;, :offset 2932, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(defn workplaces-routes [db]\n  [\&quot;/workplaces\&quot;\n   [\n    [\&quot;\&quot; (yada/resource\n          {:methods\n           {:get\n            {:produces #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :response (fn [ctx]\n                         (let [opts (-&gt;&gt; (get-in ctx [:parameters :query])\n                                         (reduce (fn [r [k v]]\n                                                   (assoc r k {\&quot;$regex\&quot;   v\n                                                               \&quot;$options\&quot; \&quot;i\&quot;})) {}))]\n                           (db.workplaces/workplaces-list db opts)))}\n            :post\n            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :consumes   #{\&quot;application/json\&quot; \&quot;application/x-www-form-urlencoded\&quot;}\n             :parameters {:body {:name          schema/Str\n                                 :email-address schema/Str\n                                 :address       {schema/Keyword schema/Str}}}\n             :response   (fn [ctx]\n                           (let [address (add-ns (get-in ctx [:parameters :body :address]) :address)\n                                 workplace (-&gt; (get-in ctx [:parameters :body])\n                                               (add-ns :workplace)\n                                               (update :workplace/address add-ns :address))]\n                             (if-let [response (db.workplaces/create-workplace db workplace)]\n                               {:data response}\n                               (assoc (:response ctx) :status 404))))}}})]\n    ;[\&quot;/add\&quot; (yada/resource\n    ;          {:methods\n    ;           {:post\n    ;            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n    ;             :consumes   \&quot;application/x-www-form-urlencoded\&quot;\n    ;             :parameters {:body {:email-address schema/Str\n    ;                                 :password      schema/Str\n    ;                                 :first-name    schema/Str\n    ;                                 :last-name     schema/Str}}\n    ;             :response   (fn [ctx]\n    ;                           (let [{:keys [email-address password first-name\n    ;                                         last-name]} (get-in ctx [:parameters :body])]\n    ;                             (if-not (db.users/find-user-by-email-address db email-address)\n    ;                               (let [user (db.users/create-user db {:user/first-name    first-name\n    ;                                                                    :user/last-name     last-name\n    ;                                                                    :user/password      password\n    ;                                                                    :user/email-address email-address})]\n    ;                                 ;(postman/send-activation-email user)\n    ;                                 (dissoc user :user/password))\n    ;                               (assoc (:response ctx) :status 500 :body {:error \&quot;user exists\&quot;}))))}}})]\n    ]])&quot;, :offset 2976, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(defn workplaces-routes [db]\n  [\&quot;/workplaces\&quot;\n   [\n    [\&quot;\&quot; (yada/resource\n          {:methods\n           {:get\n            {:produces #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :response (fn [ctx]\n                         (let [opts (-&gt;&gt; (get-in ctx [:parameters :query])\n                                         (reduce (fn [r [k v]]\n                                                   (assoc r k {\&quot;$regex\&quot;   v\n                                                               \&quot;$options\&quot; \&quot;i\&quot;})) {}))]\n                           (db.workplaces/workplaces-list db opts)))}\n            :post\n            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :consumes   #{\&quot;application/json\&quot; \&quot;application/x-www-form-urlencoded\&quot;}\n             :parameters {:body {:name          schema/Str\n                                 :email-address schema/Str\n                                 :address       {schema/Keyword schema/Str}}}\n             :response   (fn [ctx]\n                           (let [address (add-ns (get-in ctx [:parameters :body :address]) :address)\n                                 workplace (-&gt; (get-in ctx [:parameters :body])\n                                               (add-ns :workplace)\n                                               (update :workplace/address add-ns :address))]\n                             (println (s/explain :workplace/workplace workplace))\n                             (if-let [response (db.workplaces/create-workplace db workplace)]\n                               {:data response}\n                               (assoc (:response ctx) :status 404))))}}})]\n    ;[\&quot;/add\&quot; (yada/resource\n    ;          {:methods\n    ;           {:post\n    ;            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n    ;             :consumes   \&quot;application/x-www-form-urlencoded\&quot;\n    ;             :parameters {:body {:email-address schema/Str\n    ;                                 :password      schema/Str\n    ;                                 :first-name    schema/Str\n    ;                                 :last-name     schema/Str}}\n    ;             :response   (fn [ctx]\n    ;                           (let [{:keys [email-address password first-name\n    ;                                         last-name]} (get-in ctx [:parameters :body])]\n    ;                             (if-not (db.users/find-user-by-email-address db email-address)\n    ;                               (let [user (db.users/create-user db {:user/first-name    first-name\n    ;                                                                    :user/last-name     last-name\n    ;                                                                    :user/password      password\n    ;                                                                    :user/email-address email-address})]\n    ;                                 ;(postman/send-activation-email user)\n    ;                                 (dissoc user :user/password))\n    ;                               (assoc (:response ctx) :status 500 :body {:error \&quot;user exists\&quot;}))))}}})]\n    ]])&quot;, :offset 3058, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(db.workplaces/workplaces-list tmp-db)&quot;, :offset 38, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(ns eckersdorf.repl\n  (:require [clojure.spec.alpha :as s]\n            [clojure.java.io :as io]\n            [com.stuartsierra.component :as component]\n            [aero.core :as aero]\n            [taoensso.encore :as encore]\n            [taoensso.timbre :as timbre]\n            [monger.collection :as mc]\n            [eckersdorf.server :as server]\n            [eckersdorf.db.core :as db]\n            [eckersdorf.routes.core :as routes]\n            [eckersdorf.system :as system]\n            [eckersdorf.db.users :as users]\n            [eckersdorf.db.timetable :as timetable]\n            [eckersdorf.db.workers :as db.workers]\n            [eckersdorf.db.workplaces :as db.workplaces]\n            [cuerdas.core :as str]\n            [clojure.spec.alpha :as s]\n            [buddy.sign.jwt :as jwt]\n            [buddy.hashers :as hashers]\n            [clj-time.core :as t]\n            [progrock.core :as pr]\n            [clojure.zip :as zip]\n            [progrock.core :as pr])\n  (:import (org.bson.types ObjectId)))&quot;, :offset 1011, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(s/def :workplace/workplace (s/keys :req [:workplace/name\n                                          :workplace/email-address\n                                          :workplace/address\n                                          :workplace/type]\n                                    :opt [:workplace/id]))&quot;, :offset 303, :ns &quot;eckersdorf.db.specs&quot;} {:command &quot;(s/valid? :workplace/name \&quot;asd\&quot;)&quot;, :offset 32, :ns &quot;eckersdorf.core&quot;} {:command &quot;(ns eckersdorf.routes.services.workplaces\n  (:require [clojure.spec.alpha :as s]\n            [clojure.core.async :refer [go]]\n            [schema.core :as schema]\n            [yada.yada :as yada]\n            [monger.collection :as mc]\n            [eckersdorf.db.workplaces :as eckersdorf.db.workplaces]\n            [taoensso.timbre :as timbre]\n            [taoensso.encore :as encore :refer [assoc-some]]\n            [manifold.deferred :as d]\n            [cuerdas.core :as str]\n            [hiccup.core :as hiccup]\n            [yada.jwt :as jwt]\n            [eckersdorf.db.workplaces :as db.workplaces]\n            [eckersdorf.utils :refer [add-ns]]))&quot;, :offset 651, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(defn workplaces-routes [db]\n  [\&quot;/workplaces\&quot;\n   [\n    [\&quot;\&quot; (yada/resource\n          {:methods\n           {:get\n            {:produces #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :response (fn [ctx]\n                         (let [opts (-&gt;&gt; (get-in ctx [:parameters :query])\n                                         (reduce (fn [r [k v]]\n                                                   (assoc r k {\&quot;$regex\&quot;   v\n                                                               \&quot;$options\&quot; \&quot;i\&quot;})) {}))]\n                           (db.workplaces/workplaces-list db opts)))}\n            :post\n            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :consumes   #{\&quot;application/json\&quot; \&quot;application/x-www-form-urlencoded\&quot;}\n             :parameters {:body {:name          schema/Str\n                                 :email-address schema/Str\n                                 :type          schema/Str\n                                 :address       {schema/Keyword schema/Str}}}\n             :response   (fn [ctx]\n                           (let [address (add-ns (get-in ctx [:parameters :body :address]) :address)\n                                 workplace (-&gt; (get-in ctx [:parameters :body])\n                                               (add-ns :workplace)\n                                               (update :workplace/address add-ns :address))]\n                             (println (s/explain :workplace/workplace workplace))\n                             (if-let [response (db.workplaces/create-workplace db workplace)]\n                               {:data response}\n                               (assoc (:response ctx) :status 404))))}}})]\n    ;[\&quot;/add\&quot; (yada/resource\n    ;          {:methods\n    ;           {:post\n    ;            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n    ;             :consumes   \&quot;application/x-www-form-urlencoded\&quot;\n    ;             :parameters {:body {:email-address schema/Str\n    ;                                 :password      schema/Str\n    ;                                 :first-name    schema/Str\n    ;                                 :last-name     schema/Str}}\n    ;             :response   (fn [ctx]\n    ;                           (let [{:keys [email-address password first-name\n    ;                                         last-name]} (get-in ctx [:parameters :body])]\n    ;                             (if-not (db.users/find-user-by-email-address db email-address)\n    ;                               (let [user (db.users/create-user db {:user/first-name    first-name\n    ;                                                                    :user/last-name     last-name\n    ;                                                                    :user/password      password\n    ;                                                                    :user/email-address email-address})]\n    ;                                 ;(postman/send-activation-email user)\n    ;                                 (dissoc user :user/password))\n    ;                               (assoc (:response ctx) :status 500 :body {:error \&quot;user exists\&quot;}))))}}})]\n    ]])&quot;, :offset 3117, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(keyword \&quot;sex\&quot; :a/b)&quot;, :offset 19, :ns &quot;eckersdorf.core&quot;} {:command &quot;(keyword \&quot;sex\&quot; :b)&quot;, :offset 16, :ns &quot;eckersdorf.core&quot;} {:command &quot;(keyword :sex :b)&quot;, :offset 10, :ns &quot;eckersdorf.core&quot;} {:command &quot;(keyword \&quot;sex\&quot; \&quot;b\&quot;)&quot;, :offset 16, :ns &quot;eckersdorf.core&quot;} {:command &quot;(keyword \&quot;sex\&quot; \&quot;a/b\&quot;)&quot;, :offset 18, :ns &quot;eckersdorf.core&quot;} {:command &quot;(require `[clojure.set :as set])&quot;, :offset 30, :ns &quot;eckersdorf.core&quot;} {:command &quot;(set/rename-keys {:a/b 1} {:a/b :b/c})&quot;, :offset 38, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(defmulti remove-workplace-by-id (fn [_ id _] (type id)))&quot;, :offset 57, :ns &quot;eckersdorf.db.workplaces&quot;} {:command &quot;(defmethod remove-workplace-by-id ObjectId [db ^ObjectId id workplace]\n  {:pre  [(s/valid? :workplace/workplace workplace)]\n   :post [(s/valid? :workplace/workplace %)]}\n  (mr/acknowledged? (mc/remove-by-id db \&quot;workplaces\&quot; id)))&quot;, :offset 228, :ns &quot;eckersdorf.db.workplaces&quot;} {:command &quot;(defn workplaces-routes [db]\n  [\&quot;/workplaces\&quot;\n   [\n    [\&quot;\&quot; (yada/resource\n          {:methods\n           {:get\n            {:produces #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :response (fn [ctx]\n                         (let [opts (-&gt;&gt; (get-in ctx [:parameters :query])\n                                         (reduce (fn [r [k v]]\n                                                   (assoc r k {\&quot;$regex\&quot;   v\n                                                               \&quot;$options\&quot; \&quot;i\&quot;})) {}))]\n                           (db.workplaces/workplaces-list db opts)))}\n            :post\n            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :consumes   #{\&quot;application/json\&quot; \&quot;application/x-www-form-urlencoded\&quot;}\n             :parameters {:body {:name          schema/Str\n                                 :email-address schema/Str\n                                 :type          schema/Str\n                                 :address       {schema/Keyword schema/Str}}}\n             :response   (fn [ctx]\n                           (let [address (add-ns (get-in ctx [:parameters :body :address]) :address)\n                                 workplace (-&gt; (get-in ctx [:parameters :body])\n                                               (add-ns :workplace)\n                                               (update :workplace/address add-ns :address))]\n                             (if-let [response (db.workplaces/create-workplace db workplace)]\n                               {:data response}\n                               (assoc (:response ctx) :status 404))))}}})]\n    [[\&quot;/\&quot; :id] (yada/resource\n                 {:methods\n                  {\n                   ;:put\n                   ;{:produces #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n                   ; :response (fn [ctx]\n                   ;             (let [opts (-&gt;&gt; (get-in ctx [:parameters :query])\n                   ;                             (reduce (fn [r [k v]]\n                   ;                                       (assoc r k {\&quot;$regex\&quot;   v\n                   ;                                                   \&quot;$options\&quot; \&quot;i\&quot;})) {}))]\n                   ;               (db.workplaces/workplaces-list db opts)))}\n                   :delete\n                   {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n                    :consumes   #{\&quot;application/json\&quot; \&quot;application/x-www-form-urlencoded\&quot;}\n                    :parameters {:path {:id schema/Str}}\n                    :response   (fn [ctx]\n                                  (println :id id)\n                                  (:response ctx))}}})]\n    ;[\&quot;/add\&quot; (yada/resource\n    ;          {:methods\n    ;           {:post\n    ;            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n    ;             :consumes   \&quot;application/x-www-form-urlencoded\&quot;\n    ;             :parameters {:body {:email-address schema/Str\n    ;                                 :password      schema/Str\n    ;                                 :first-name    schema/Str\n    ;                                 :last-name     schema/Str}}\n    ;             :response   (fn [ctx]\n    ;                           (let [{:keys [email-address password first-name\n    ;                                         last-name]} (get-in ctx [:parameters :body])]\n    ;                             (if-not (db.users/find-user-by-email-address db email-address)\n    ;                               (let [user (db.users/create-user db {:user/first-name    first-name\n    ;                                                                    :user/last-name     last-name\n    ;                                                                    :user/password      password\n    ;                                                                    :user/email-address email-address})]\n    ;                                 ;(postman/send-activation-email user)\n    ;                                 (dissoc user :user/password))\n    ;                               (assoc (:response ctx) :status 500 :body {:error \&quot;user exists\&quot;}))))}}})]\n    ]])&quot;, :offset 4045, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(defn workplaces-routes [db]\n  [\&quot;/workplaces\&quot;\n   [\n    [\&quot;\&quot; (yada/resource\n          {:methods\n           {:get\n            {:produces #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :response (fn [ctx]\n                         (let [opts (-&gt;&gt; (get-in ctx [:parameters :query])\n                                         (reduce (fn [r [k v]]\n                                                   (assoc r k {\&quot;$regex\&quot;   v\n                                                               \&quot;$options\&quot; \&quot;i\&quot;})) {}))]\n                           (db.workplaces/workplaces-list db opts)))}\n            :post\n            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :consumes   #{\&quot;application/json\&quot; \&quot;application/x-www-form-urlencoded\&quot;}\n             :parameters {:body {:name          schema/Str\n                                 :email-address schema/Str\n                                 :type          schema/Str\n                                 :address       {schema/Keyword schema/Str}}}\n             :response   (fn [ctx]\n                           (let [address (add-ns (get-in ctx [:parameters :body :address]) :address)\n                                 workplace (-&gt; (get-in ctx [:parameters :body])\n                                               (add-ns :workplace)\n                                               (update :workplace/address add-ns :address))]\n                             (if-let [response (db.workplaces/create-workplace db workplace)]\n                               {:data response}\n                               (assoc (:response ctx) :status 404))))}}})]\n    [[\&quot;/\&quot; :id] (yada/resource\n                 {:methods\n                  {\n                   ;:put\n                   ;{:produces #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n                   ; :response (fn [ctx]\n                   ;             (let [opts (-&gt;&gt; (get-in ctx [:parameters :query])\n                   ;                             (reduce (fn [r [k v]]\n                   ;                                       (assoc r k {\&quot;$regex\&quot;   v\n                   ;                                                   \&quot;$options\&quot; \&quot;i\&quot;})) {}))]\n                   ;               (db.workplaces/workplaces-list db opts)))}\n                   :delete\n                   {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n                    :consumes   #{\&quot;application/json\&quot; \&quot;application/x-www-form-urlencoded\&quot;}\n                    :parameters {:path {:id schema/Str}}\n                    :response   (fn [ctx]\n                                  (let [id (get-in ctx [:parameters :path :id])]\n                                    (println :id id)\n                                    (:response ctx)))}}})]\n    ;[\&quot;/add\&quot; (yada/resource\n    ;          {:methods\n    ;           {:post\n    ;            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n    ;             :consumes   \&quot;application/x-www-form-urlencoded\&quot;\n    ;             :parameters {:body {:email-address schema/Str\n    ;                                 :password      schema/Str\n    ;                                 :first-name    schema/Str\n    ;                                 :last-name     schema/Str}}\n    ;             :response   (fn [ctx]\n    ;                           (let [{:keys [email-address password first-name\n    ;                                         last-name]} (get-in ctx [:parameters :body])]\n    ;                             (if-not (db.users/find-user-by-email-address db email-address)\n    ;                               (let [user (db.users/create-user db {:user/first-name    first-name\n    ;                                                                    :user/last-name     last-name\n    ;                                                                    :user/password      password\n    ;                                                                    :user/email-address email-address})]\n    ;                                 ;(postman/send-activation-email user)\n    ;                                 (dissoc user :user/password))\n    ;                               (assoc (:response ctx) :status 500 :body {:error \&quot;user exists\&quot;}))))}}})]\n    ]])&quot;, :offset 4131, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(defn workplaces-routes [db]\n  [\&quot;/workplaces\&quot;\n   [\n    [\&quot;\&quot; (yada/resource\n          {:methods\n           {:get\n            {:produces #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :response (fn [ctx]\n                         (let [opts (-&gt;&gt; (get-in ctx [:parameters :query])\n                                         (reduce (fn [r [k v]]\n                                                   (assoc r k {\&quot;$regex\&quot;   v\n                                                               \&quot;$options\&quot; \&quot;i\&quot;})) {}))]\n                           (db.workplaces/workplaces-list db opts)))}\n            :post\n            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :consumes   #{\&quot;application/json\&quot; \&quot;application/x-www-form-urlencoded\&quot;}\n             :parameters {:body {:name          schema/Str\n                                 :email-address schema/Str\n                                 :type          schema/Str\n                                 :address       {schema/Keyword schema/Str}}}\n             :response   (fn [ctx]\n                           (let [address (add-ns (get-in ctx [:parameters :body :address]) :address)\n                                 workplace (-&gt; (get-in ctx [:parameters :body])\n                                               (add-ns :workplace)\n                                               (update :workplace/address add-ns :address))]\n                             (if-let [response (db.workplaces/create-workplace db workplace)]\n                               {:data response}\n                               (assoc (:response ctx) :status 404))))}}})]\n    [[\&quot;/\&quot; :id] (yada/resource\n                 {:methods\n                  {\n                   ;:put\n                   ;{:produces #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n                   ; :response (fn [ctx]\n                   ;             (let [opts (-&gt;&gt; (get-in ctx [:parameters :query])\n                   ;                             (reduce (fn [r [k v]]\n                   ;                                       (assoc r k {\&quot;$regex\&quot;   v\n                   ;                                                   \&quot;$options\&quot; \&quot;i\&quot;})) {}))]\n                   ;               (db.workplaces/workplaces-list db opts)))}\n                   :delete\n                   {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n                    :consumes   #{\&quot;application/json\&quot; \&quot;application/x-www-form-urlencoded\&quot;}\n                    :parameters {:path {:id schema/Str}}\n                    :response   (fn [ctx]\n                                  (let [id (get-in ctx [:parameters :path :id])]\n                                    (db.workplaces/remove-workplace-by-id db id)\n                                    {:response \&quot;\&quot;}))}}})]\n    ;[\&quot;/add\&quot; (yada/resource\n    ;          {:methods\n    ;           {:post\n    ;            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n    ;             :consumes   \&quot;application/x-www-form-urlencoded\&quot;\n    ;             :parameters {:body {:email-address schema/Str\n    ;                                 :password      schema/Str\n    ;                                 :first-name    schema/Str\n    ;                                 :last-name     schema/Str}}\n    ;             :response   (fn [ctx]\n    ;                           (let [{:keys [email-address password first-name\n    ;                                         last-name]} (get-in ctx [:parameters :body])]\n    ;                             (if-not (db.users/find-user-by-email-address db email-address)\n    ;                               (let [user (db.users/create-user db {:user/first-name    first-name\n    ;                                                                    :user/last-name     last-name\n    ;                                                                    :user/password      password\n    ;                                                                    :user/email-address email-address})]\n    ;                                 ;(postman/send-activation-email user)\n    ;                                 (dissoc user :user/password))\n    ;                               (assoc (:response ctx) :status 500 :body {:error \&quot;user exists\&quot;}))))}}})]\n    ]])&quot;, :offset 4158, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(defmulti remove-workplace-by-id (fn [_ id] (type id)))&quot;, :offset 55, :ns &quot;eckersdorf.db.workplaces&quot;} {:command &quot;(defmethod remove-workplace-by-id ObjectId [db ^ObjectId id]\n  {:pre  [(s/valid? :workplace/workplace workplace)]\n   :post [(s/valid? :workplace/workplace %)]}\n  (mr/acknowledged? (mc/remove-by-id db \&quot;workplaces\&quot; id)))&quot;, :offset 218, :ns &quot;eckersdorf.db.workplaces&quot;} {:command &quot;(defmethod remove-workplace-by-id ObjectId [db ^ObjectId id]\n  {:pre  [(s/valid? :mongo/object-id id)]}\n  (mr/acknowledged? (mc/remove-by-id db \&quot;workplaces\&quot; id)))&quot;, :offset 162, :ns &quot;eckersdorf.db.workplaces&quot;} {:command &quot;(defmethod remove-workplace-by-id String [db ^String id workplace]\n  (remove-workplace-by-id db (ObjectId. id) workplace))&quot;, :offset 122, :ns &quot;eckersdorf.db.workplaces&quot;} {:command &quot;(ns eckersdorf.db.workplaces\n  (:refer-clojure :exclude [update])\n  (:require [clojure.spec.alpha :as s]\n            [taoensso.timbre :as timbre]\n            [taoensso.encore :as encore]\n            [clj-time.core :as t]\n            [monger.core :as mg]\n            [monger.collection :as mc]\n            [monger.operators :refer :all]\n            [monger.query :as mq]\n            [monger.result :as mr]\n            [monger.internal.pagination :refer [offset-for]]\n            [cheshire.core :as json]\n            [cuerdas.core :as str]\n            [buddy.hashers :as hashers]\n            [buddy.sign.jwt :as jwt])\n  (:import (org.bson.types ObjectId)))&quot;, :offset 654, :ns &quot;eckersdorf.db.workplaces&quot;} {:command &quot;(defn workplaces-routes [db]\n  [\&quot;/workplaces\&quot;\n   [\n    [\&quot;\&quot; (yada/resource\n          {:methods\n           {:get\n            {:produces #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :response (fn [ctx]\n                         (let [opts (-&gt;&gt; (get-in ctx [:parameters :query])\n                                         (reduce (fn [r [k v]]\n                                                   (assoc r k {\&quot;$regex\&quot;   v\n                                                               \&quot;$options\&quot; \&quot;i\&quot;})) {}))]\n                           (db.workplaces/workplaces-list db opts)))}\n            :post\n            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n             :consumes   #{\&quot;application/json\&quot; \&quot;application/x-www-form-urlencoded\&quot;}\n             :parameters {:body {:name          schema/Str\n                                 :email-address schema/Str\n                                 :type          schema/Str\n                                 :address       {schema/Keyword schema/Str}}}\n             :response   (fn [ctx]\n                           (let [address (add-ns (get-in ctx [:parameters :body :address]) :address)\n                                 workplace (-&gt; (get-in ctx [:parameters :body])\n                                               (add-ns :workplace)\n                                               (update :workplace/address add-ns :address))]\n                             (if-let [response (db.workplaces/create-workplace db workplace)]\n                               {:data response}\n                               (assoc (:response ctx) :status 404))))}}})]\n    [[\&quot;/\&quot; :id] (yada/resource\n                 {:methods\n                  {:put\n                   {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n                    :consumes   #{\&quot;application/json\&quot; \&quot;application/x-www-form-urlencoded\&quot;}\n                    :parameters {:path {:id schema/Str}\n                                 :body {:name          schema/Str\n                                        :email-address schema/Str\n                                        :type          schema/Str\n                                        :address       {schema/Keyword schema/Str}}}\n                    :response   (fn [ctx]\n                                  (let [object-id (get-in ctx [:parameters :path :id])\n                                        address (add-ns (get-in ctx [:parameters :body :address]) :address)\n                                        workplace (-&gt; (get-in ctx [:parameters :body])\n                                                      (add-ns :workplace)\n                                                      (update :workplace/address add-ns :address))]\n                                    (if-let [response (db.workplaces/update-workplace-by-id\n                                                        db object-id workplace)]\n                                      {:data response}\n                                      (assoc (:response ctx) :status 404))))}\n                   :delete\n                   {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n                    :consumes   #{\&quot;application/json\&quot; \&quot;application/x-www-form-urlencoded\&quot;}\n                    :parameters {:path {:id schema/Str}}\n                    :response   (fn [ctx]\n                                  (let [id (get-in ctx [:parameters :path :id])]\n                                    (db.workplaces/remove-workplace-by-id db id)\n                                    {:response \&quot;\&quot;}))}}})]\n    ;[\&quot;/add\&quot; (yada/resource\n    ;          {:methods\n    ;           {:post\n    ;            {:produces   #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n    ;             :consumes   \&quot;application/x-www-form-urlencoded\&quot;\n    ;             :parameters {:body {:email-address schema/Str\n    ;                                 :password      schema/Str\n    ;                                 :first-name    schema/Str\n    ;                                 :last-name     schema/Str}}\n    ;             :response   (fn [ctx]\n    ;                           (let [{:keys [email-address password first-name\n    ;                                         last-name]} (get-in ctx [:parameters :body])]\n    ;                             (if-not (db.users/find-user-by-email-address db email-address)\n    ;                               (let [user (db.users/create-user db {:user/first-name    first-name\n    ;                                                                    :user/last-name     last-name\n    ;                                                                    :user/password      password\n    ;                                                                    :user/email-address email-address})]\n    ;                                 ;(postman/send-activation-email user)\n    ;                                 (dissoc user :user/password))\n    ;                               (assoc (:response ctx) :status 500 :body {:error \&quot;user exists\&quot;}))))}}})]\n    ]])&quot;, :offset 4919, :ns &quot;eckersdorf.routes.services.workplaces&quot;} {:command &quot;(defn base-body []\n  [:body\n   {:style \&quot;margin: 0px;\n            width: 100%;\n            height: 100%;\n\n            \&quot;}\n   [:div {:id    \&quot;app\&quot;\n          :style \&quot;width: 100%;\n                      height: 100%;\n\n                      \&quot;}\n    \&quot;Loading App...\&quot;]\n   (page/include-css \&quot;css/eckersdorf.css\&quot;)\n   (page/include-css \&quot;https://cdnjs.cloudflare.com/ajax/libs/antd/2.12.3/antd.min.css\&quot;)\n   (page/include-css \&quot;/assets/font-awesome/css/font-awesome.min.css\&quot;)\n   (page/include-js \&quot;/js/app.js\&quot;)\n   ])&quot;, :offset 498, :ns &quot;eckersdorf.layout&quot;} {:command &quot;(ns eckersdorf.repl\n  (:require [clojure.spec.alpha :as s]\n            [clojure.java.io :as io]\n            [com.stuartsierra.component :as component]\n            [aero.core :as aero]\n            [taoensso.encore :as encore]\n            [taoensso.timbre :as timbre]\n            [monger.collection :as mc]\n            [eckersdorf.server :as server]\n            [eckersdorf.db.core :as db]\n            [eckersdorf.routes.core :as routes]\n            [eckersdorf.system :as system]\n            [eckersdorf.db.users :as users]\n            [eckersdorf.db.timetable :as timetable]\n            [eckersdorf.db.workers :as db.workers]\n            [eckersdorf.db.workplaces :as db.workplaces]\n            [cuerdas.core :as str]\n            [clojure.spec.alpha :as s]\n            [buddy.sign.jwt :as jwt]\n            [buddy.hashers :as hashers]\n            [clj-time.core :as t]\n            [progrock.core :as pr]\n            [clojure.zip :as zip]\n            [progrock.core :as pr]\n            [clojure.set :as set])\n  (:import (org.bson.types ObjectId)))&quot;, :offset 1045, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(s/def ::mytest (s/nilable string?))&quot;, :offset 36, :ns &quot;eckersdorf.db.specs&quot;} {:command &quot;(s/def ::mytest2 (s/keys [::mytest]))&quot;, :offset 37, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;(s/def :work-schedule/schedule (s/keys [:worker/object-id\n                                        :worker/first-name\n                                        :worker/last-name\n                                        :workplace/object-id\n                                        :datetime]))&quot;, :offset 288, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;(s/def :work-schedule/schedule (s/keys :req [:worker/object-id\n                                             :worker/first-name\n                                             :worker/last-name\n                                             :workplace/object-id\n                                             :datetime]))&quot;, :offset 313, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;(s/def :work-schedule/schedule (s/keys :req [:worker/object-id\n                                             :worker/first-name\n                                             :worker/last-name\n                                             :workplace/object-id\n                                             ::datetime]))&quot;, :offset 314, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;(s/def ::mytest (s/keys :req [::datetime]))&quot;, :offset 43, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;(s/valid? ::mytest {:datetime \&quot;sex\&quot;})&quot;, :offset 37, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;(s/explain ::mytest {:datetime \&quot;sex\&quot;})&quot;, :offset 38, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;(ObjectId. \&quot;lkasjdla\&quot;)&quot;, :offset 22, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;db.work-schedule&quot;, :offset 16, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(ns eckersdorf.repl\n  (:require [clojure.spec.alpha :as s]\n            [clojure.java.io :as io]\n            [com.stuartsierra.component :as component]\n            [aero.core :as aero]\n            [taoensso.encore :as encore]\n            [taoensso.timbre :as timbre]\n            [monger.collection :as mc]\n            [eckersdorf.server :as server]\n            [eckersdorf.db.core :as db]\n            [eckersdorf.routes.core :as routes]\n            [eckersdorf.system :as system]\n            [eckersdorf.db.users :as users]\n            [eckersdorf.db.work-schedule :as timetable]\n            [eckersdorf.db.workers :as db.workers]\n            [eckersdorf.db.workplaces :as db.workplaces]\n            [eckersdorf.db.work-schedule :as db.work-schedule]\n            [cuerdas.core :as str]\n            [clojure.spec.alpha :as s]\n            [buddy.sign.jwt :as jwt]\n            [buddy.hashers :as hashers]\n            [clj-time.core :as t]\n            [progrock.core :as pr]\n            [clojure.zip :as zip]\n            [progrock.core :as pr]\n            [clojure.set :as set])\n  (:import (org.bson.types ObjectId)))&quot;, :offset 1112, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(+ 1 1)&quot;, :offset 6, :ns &quot;eckersdorf.core&quot;} {:command &quot;(ns eckersdorf.repl\n  (:require [clojure.spec.alpha :as s]\n            [clojure.java.io :as io]\n            [com.stuartsierra.component :as component]\n            [aero.core :as aero]\n            [taoensso.encore :as encore]\n            [taoensso.timbre :as timbre]\n            [monger.collection :as mc]\n            [eckersdorf.server :as server]\n            [eckersdorf.db.core :as db]\n            [eckersdorf.routes.core :as routes]\n            [eckersdorf.system :as system]\n            [eckersdorf.db.users :as users]\n            [eckersdorf.db.workers :as db.workers]\n            [eckersdorf.db.workplaces :as db.workplaces]\n            [eckersdorf.db.work-schedule :as db.work-schedule]\n            [cuerdas.core :as str]\n            [clojure.spec.alpha :as s]\n            [buddy.sign.jwt :as jwt]\n            [buddy.hashers :as hashers]\n            [clj-time.core :as t]\n            [progrock.core :as pr]\n            [clojure.zip :as zip]\n            [progrock.core :as pr]\n            [clojure.set :as set])\n  (:import (org.bson.types ObjectId)))&quot;, :offset 1056, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(db.work-schedule/create-work-schedule-collection tmp-db)&quot;, :offset 57, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(defmulti schedule-work\n  (fn [db {:keys [work-schedule/workplace-id\n                  work-schedule/worker-id\n                  work-schedule/datetime]}]\n    [(class workplace-id) (class worker-id) (class datetime)]))&quot;, :offset 218, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;(defmethod schedule-work [ObjectId ObjectId DateTime]\n  [db {:keys [work-schedule/workplace-id\n              work-schedule/worker-id\n              work-schedule/datetime\n              work-schedule/work-type] :as m}]\n  (mr/acknowledged? (mc/insert db \&quot;work-schedule\&quot; m)))&quot;, :offset 271, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;(defmethod schedule-work [String ObjectId DateTime]\n  [db {:keys [work-schedule/workplace-id\n              work-schedule/worker-id\n              work-schedule/datetime\n              work-schedule/work-type] :as m}]\n  (mr/acknowledged? (mc/insert db \&quot;work-schedule\&quot;\n                               (-&gt; m (clojure.core/update :work-schedule/workplace-id #(ObjectId. ^String %))))))&quot;, :offset 378, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;(defmethod schedule-work [ObjectId String DateTime]\n  [db {:keys [work-schedule/workplace-id\n              work-schedule/worker-id\n              work-schedule/datetime\n              work-schedule/work-type] :as m}]\n  (mr/acknowledged? (mc/insert db \&quot;work-schedule\&quot;\n                               (-&gt; m (clojure.core/update :work-schedule/worker-id #(ObjectId. ^String %))))))&quot;, :offset 375, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;(defmethod schedule-work [String String DateTime]\n  [db {:keys [work-schedule/workplace-id\n              work-schedule/worker-id\n              work-schedule/datetime\n              work-schedule/work-type] :as m}]\n  (mr/acknowledged? (mc/insert db \&quot;work-schedule\&quot;\n                               (-&gt; m\n                                   (clojure.core/update :work-schedule/workplace-id #(ObjectId. ^String %))\n                                   (clojure.core/update :work-schedule/worker-id #(ObjectId. ^String %))))))&quot;, :offset 516, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;(first (db.workplaces/workplaces-list tmp-db))&quot;, :offset 46, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(first (db.workers/workers-list tmp-db))&quot;, :offset 40, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(db.work-schedule/schedule-work tmp-db\n                                {:work-schedule/workplace-id \&quot;59cd4fc48466bc2056615d66\&quot;\n                                 :work-schedule/worker-id \&quot;59ed11e7fe1b232a5593a5a4\&quot;\n                                 :work-schedule/datetime (dt/now)\n                                 :work-schedule/work-type \&quot;seller\&quot;})&quot;, :offset 346, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(mc/find-maps tmp-db \&quot;work-schedule\&quot;)&quot;, :offset 37, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(db.work-schedule/reset-work-schedule-collection tmp-db)&quot;, :offset 56, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(ns eckersdorf.routes.services.work-schedule\n  (:require [clojure.spec.alpha :as s]\n            [clojure.core.async :refer [go]]\n            [schema.core :as schema]\n            [yada.yada :as yada]\n            [monger.collection :as mc]\n            [taoensso.timbre :as timbre]\n            [taoensso.encore :as encore :refer [assoc-some]]\n            [manifold.deferred :as d]\n            [cuerdas.core :as str]\n            [hiccup.core :as hiccup]\n            [yada.jwt :as jwt]\n            [eckersdorf.db.work-schedule :as db.work-schedule]\n            [eckersdorf.utils :refer [add-ns]]))&quot;, :offset 592, :ns &quot;eckersdorf.routes.services.work-schedule&quot;} {:command &quot;(reset-system)&quot;, :offset 14, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(defn workers-routes [db]\n  [\&quot;/work-schedule\&quot;\n   [\n    [\&quot;\&quot; (yada/resource\n          {:methods\n           {\n            ;:get\n            ;{:produces #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n            ; :response (fn [ctx]\n            ;             (let [opts (-&gt;&gt; (get-in ctx [:parameters :query])\n            ;                             (reduce (fn [r [k v]]\n            ;                                       (assoc r k {\&quot;$regex\&quot;   v\n            ;                                                   \&quot;$options\&quot; \&quot;i\&quot;})) {}))]\n            ;               {:data (db.workers/workers-list db opts)}))}\n            :post\n            {:produces   #{\&quot;application/json\&quot;}\n             :consumes   #{\&quot;application/json\&quot;}\n             :parameters {:body [{schema/Any schema/Any}]}\n             :response   (fn [ctx]\n                           (let [works (-&gt; (get-in ctx [:parameters :body]))]\n                             (println works)\n                             ;(if-let [response (db.work-schedule/schedule-work db work)]\n                             ;  {:data response}\n                             ;  (assoc (:response ctx) :status 404))\n                             ))}}})]\n    ]])&quot;, :offset 1177, :ns &quot;eckersdorf.routes.services.work-schedule&quot;} {:command &quot;(defn schedule-routes [db]\n  [\&quot;/work-schedule\&quot;\n   [\n    [\&quot;\&quot; (yada/resource\n          {:methods\n           {\n            ;:get\n            ;{:produces #{\&quot;application/json\&quot; \&quot;text/plain\&quot;}\n            ; :response (fn [ctx]\n            ;             (let [opts (-&gt;&gt; (get-in ctx [:parameters :query])\n            ;                             (reduce (fn [r [k v]]\n            ;                                       (assoc r k {\&quot;$regex\&quot;   v\n            ;                                                   \&quot;$options\&quot; \&quot;i\&quot;})) {}))]\n            ;               {:data (db.workers/workers-list db opts)}))}\n            :post\n            {:produces   #{\&quot;application/json\&quot;}\n             :consumes   #{\&quot;application/json\&quot;}\n             :parameters {:body [{schema/Any schema/Any}]}\n             :response   (fn [ctx]\n                           (let [works (-&gt; (get-in ctx [:parameters :body]))]\n                             (println works)\n                             ;(if-let [response (db.work-schedule/schedule-work db work)]\n                             ;  {:data response}\n                             ;  (assoc (:response ctx) :status 404))\n                             ))}}})]\n    ]])&quot;, :offset 1178, :ns &quot;eckersdorf.routes.services.work-schedule&quot;} {:command &quot;(defn services-routes [db]\n  [\&quot;/api\&quot;\n   [\n    [\&quot;/1.0\&quot;\n     [\n      (services.users/users-routes db)\n      (services.workplaces/workplaces-routes db)\n      (services.workers/schedule-routes db)\n      (services.work-schedule/schedule-routes db)]]]])&quot;, :offset 247, :ns &quot;eckersdorf.routes.services.core&quot;} {:command &quot;(ns eckersdorf.routes.services.core\n  (:require [clojure.spec.alpha :as s]\n            [clojure.core.async :refer [go]]\n            [schema.core :as schema]\n            [yada.yada :as yada]\n            [monger.collection :as mc]\n            [eckersdorf.routes.services.users :as services.users]\n            [eckersdorf.routes.services.work-schedule :as services.workers]\n            [eckersdorf.routes.services.workplaces :as services.workplaces]\n            [eckersdorf.routes.services.work-schedule :as services.work-schedule]\n            [taoensso.timbre :as timbre]\n            [taoensso.encore :as encore :refer [assoc-some]]\n            [manifold.deferred :as d]\n            [cuerdas.core :as str]\n            [hiccup.core :as hiccup]\n            [yada.jwt :as jwt]\n            ))&quot;, :offset 786, :ns &quot;eckersdorf.routes.services.core&quot;} {:command &quot;(ns eckersdorf.db.work-schedule\n  (:refer-clojure :exclude [update])\n  (:require [clojure.spec.alpha :as s]\n            [taoensso.timbre :as timbre]\n            [taoensso.encore :as encore]\n            [clj-time.core :as dt]\n            [monger.core :as mg]\n            [monger.collection :as mc]\n            [monger.operators :refer :all]\n            [monger.query :as mq]\n            [monger.result :as mr]\n            [monger.internal.pagination :refer [offset-for]]\n            [cheshire.core :as json]\n            [cuerdas.core :as str]\n            [buddy.hashers :as hashers]\n            [buddy.sign.jwt :as jwt])\n  (:import (org.bson.types ObjectId)\n           (org.joda.time DateTime)))&quot;, :offset 694, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;(defn create-work-schedule-collection [db]\n  (when-not (mc/exists? db \&quot;work-schedule\&quot;)\n    (mc/create db \&quot;work-schedule\&quot; {})\n    (mc/create-index db \&quot;work-schedule\&quot; {:work-schedule/workplace-id 1} {:unique true})\n    (mc/create-index db \&quot;work-schedule\&quot; {:work-schedule/datetime 1})\n    (mc/create-index db \&quot;work-schedule\&quot; {:work-schedule/worker-id 1})))&quot;, :offset 353, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;(defn drop-work-schedule-collection [db]\n  (mc/remove db \&quot;work-schedule\&quot;))&quot;, :offset 74, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;(defn reset-work-schedule-collection [db]\n  (drop-work-schedule-collection db)\n  (create-work-schedule-collection db))&quot;, :offset 118, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;(defmethod month-query [ObjectId ObjectId DateTime]\n  (fn [db {:keys [work-schedule/workplace-id\n                  work-schedule/worker-id\n                  work-schedule/datetime] :as doc}]\n    (let [begin-datetime (dt/first-day-of-the-month datetime)\n          end-datetime (dt/last-day-of-the-month datetime)]\n      (mc/find-maps db \&quot;work-schedule\&quot; (assoc doc :work-schedule/datetime\n                                                  {\&quot;$gt\&quot; begin-datetime\n                                                   \&quot;$le\&quot; end-datetime})))))&quot;, :offset 534, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;(defmethod month-query [ObjectId ObjectId DateTime]\n  (fn [db {:keys [work-schedule/workplace-id\n                  work-schedule/worker-id\n                  work-schedule/datetime] :as doc}]\n    (let [begin-datetime (dt/first-day-of-the-month datetime)\n          end-datetime (dt/last-day-of-the-month datetime)]\n      (mc/find-maps db \&quot;work-schedule\&quot; (assoc doc :work-schedule/datetime\n                                                  {\&quot;gt\&quot; begin-datetime\n                                                   \&quot;le\&quot; end-datetime})))))&quot;, :offset 532, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;(defmethod month-query [ObjectId ObjectId DateTime]\n  (fn [db {:keys [work-schedule/workplace-id\n                  work-schedule/worker-id\n                  work-schedule/datetime] :as doc}]\n    (let [begin-datetime (dt/first-day-of-the-month datetime)\n          end-datetime (dt/last-day-of-the-month datetime)]\n      (mc/find-maps db \&quot;work-schedule\&quot; (assoc doc :work-schedule/datetime\n                                                  {:a begin-datetime\n                                                   :b end-datetime})))))&quot;, :offset 528, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;(defmulti month-query\n  (fn [db {:keys [work-schedule/workplace-id\n                  work-schedule/worker-id\n                  work-schedule/datetime]}]\n    [(class workplace-id) (class worker-id) (class datetime)]))&quot;, :offset 216, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;(defmethod month-query [ObjectId ObjectId DateTime]\n  (fn [db {:keys [work-schedule/workplace-id\n                  work-schedule/worker-id\n                  work-schedule/datetime] :as doc}]\n    1))&quot;, :offset 198, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;(defmethod month-query [ObjectId ObjectId DateTime]\n  (fn [db {:keys [work-schedule/workplace-id\n                  work-schedule/worker-id\n                  work-schedule/datetime]}]\n    1))&quot;, :offset 190, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;(defmethod month-query [ObjectId ObjectId DateTime]\n  [db {:keys [work-schedule/workplace-id\n              work-schedule/worker-id\n              work-schedule/datetime] :as doc}]\n  (let [begin-datetime (dt/first-day-of-the-month datetime)\n        end-datetime (dt/last-day-of-the-month datetime)]\n    (mc/find-maps db \&quot;work-schedule\&quot; (assoc doc :work-schedule/datetime\n                                                {\&quot;$gt\&quot; begin-datetime\n                                                 \&quot;$le\&quot; end-datetime}))))&quot;, :offset 511, :ns &quot;eckersdorf.db.work-schedule&quot;} {:command &quot;(ns eckersdorf.repl\n  (:require [clojure.spec.alpha :as s]\n            [clojure.java.io :as io]\n            [com.stuartsierra.component :as component]\n            [aero.core :as aero]\n            [taoensso.encore :as encore]\n            [taoensso.timbre :as timbre]\n            [monger.collection :as mc]\n            [eckersdorf.server :as server]\n            [eckersdorf.db.core :as db]\n            [eckersdorf.routes.core :as routes]\n            [eckersdorf.system :as system]\n            [eckersdorf.db.users :as users]\n            [eckersdorf.db.workers :as db.workers]\n            [eckersdorf.db.workplaces :as db.workplaces]\n            [eckersdorf.db.work-schedule :as db.work-schedule]\n            [cuerdas.core :as str]\n            [clojure.spec.alpha :as s]\n            [buddy.sign.jwt :as jwt]\n            [buddy.hashers :as hashers]\n            [clj-time.core :as t]\n            [progrock.core :as pr]\n            [clojure.zip :as zip]\n            [progrock.core :as pr]\n            [clojure.set :as set]\n            [clj-time.core :as dt])\n  (:import (org.bson.types ObjectId)))&quot;, :offset 1091, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(let [now (dt/now)]\n  (distinct [now now now]))&quot;, :offset 47, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(let [now (dt/now)]\n  (distinct [now (dt/plus now (dt/hours 1)) now]))&quot;, :offset 70, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(timbre/merge-config! {:level :info})&quot;, :offset 37, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(def repl-system nil)&quot;, :offset 21, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(def tmp-db nil)&quot;, :offset 16, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(defn init-system []\n  (alter-var-root #'repl-system (constantly (system/new-system))))&quot;, :offset 87, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(defn start-system []\n  (alter-var-root #'repl-system component/start-system)\n  (alter-var-root #'tmp-db (fn [_] (:db (:mongo repl-system)))))&quot;, :offset 142, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(defn stop-system []\n  (alter-var-root #'repl-system\n                  (fn [s] (when s (component/stop-system s)))))&quot;, :offset 116, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(defn go-system []\n  (init-system)\n  (start-system))&quot;, :offset 52, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(defn reset-system []\n  (stop-system)\n  (init-system)\n  (start-system))&quot;, :offset 71, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(go-system)&quot;, :offset 11, :ns &quot;eckersdorf.repl&quot;}], :remote [{:command &quot;(str/split \&quot;biuro@teas.com.pl\&quot; \&quot;@\&quot;)&quot;, :offset 35, :ns &quot;eckersdorf.view.ui&quot;} {:command &quot;(str/split \&quot;biuro@teas.com.pl\&quot; #\&quot;@\&quot;)&quot;, :offset 36, :ns &quot;eckersdorf.view.ui&quot;} {:command &quot;(str/split \&quot;biuro@teas.com.pl\&quot; \&quot;@\&quot; 0)&quot;, :offset 37, :ns &quot;eckersdorf.view.ui&quot;} {:command &quot;(str/split \&quot;biuro@teas.com.pl\&quot; \&quot;@\&quot; 1)&quot;, :offset 37, :ns &quot;eckersdorf.view.ui&quot;} {:command &quot;(str/split \&quot;biuro@teas.com.pl\&quot; \&quot;@\&quot; 2)&quot;, :offset 37, :ns &quot;eckersdorf.view.ui&quot;} {:command &quot;(str/split \&quot;biuro@teas.com.pl\&quot; \&quot;@\&quot; 3)&quot;, :offset 37, :ns &quot;eckersdorf.view.ui&quot;} {:command &quot;(str/split \&quot;@\&quot; \&quot;@\&quot;)&quot;, :offset 19, :ns &quot;eckersdorf.view.ui&quot;} {:command &quot;(second (str/split \&quot;@\&quot; \&quot;@\&quot;))&quot;, :offset 28, :ns &quot;eckersdorf.view.ui&quot;} {:command &quot;(second (str/split \&quot;a@\&quot; \&quot;@\&quot;))&quot;, :offset 29, :ns &quot;eckersdorf.view.ui&quot;} {:command &quot;(str/split \&quot;a@\&quot; \&quot;@\&quot;)&quot;, :offset 20, :ns &quot;eckersdorf.view.ui&quot;} {:command &quot;(ns eckersdorf.routes.core\n  (:require [re-frame.core :as rf]\n            [bidi.bidi :as bidi]\n            [pushy.core :as pushy]\n            [taoensso.timbre :as timbre]))&quot;, :offset 172, :ns &quot;eckersdorf.routes.core&quot;} {:command &quot;(rf/subscribe [:user/logged-in?])&quot;, :offset 33, :ns &quot;eckersdorf.view.ui&quot;} {:command &quot;(rf/reg-event-fx\n  :workplaces/request-create\n  (fn [{db :db} _]\n    (let [workplace (:workplaces/workplace-form db)]\n      (println workplace)\n      {:http-xhrio {:method          :post\n                    :uri             (path \&quot;/api/1.0/workplaces\&quot;)\n                    :params          {:workplace/name \&quot;name\&quot;\n                                      :workplace/email-address \&quot;email\&quot;}\n                    :format          (ajax/json-request-format)\n                    :response-format (ajax/json-response-format {:keywords? true})\n                    :on-success      [:workplaces/request-update-success]\n                    :on-failure      [:workplaces/request-update-failure]}})))&quot;, :offset 685, :ns &quot;eckersdorf.workplaces.events&quot;} {:command &quot;(rf/reg-event-fx\n  :workplaces/request-create\n  (fn [{db :db} _]\n    (let [workplace (:workplaces/workplace-form db)]\n      (println workplace)\n      {:http-xhrio {:method          :post\n                    :uri             (path \&quot;/api/1.0/workplaces\&quot;)\n                    :params          {:workplace/name \&quot;name\&quot;\n                                      :workplace/email-address \&quot;email\&quot;\n                                      :workplace/address {:address/city \&quot;city\&quot;}}\n                    :format          (ajax/json-request-format)\n                    :response-format (ajax/json-response-format {:keywords? true})\n                    :on-success      [:workplaces/request-update-success]\n                    :on-failure      [:workplaces/request-update-failure]}})))&quot;, :offset 765, :ns &quot;eckersdorf.workplaces.events&quot;} {:command &quot;(rf/dispatch [:workplaces/request-create])&quot;, :offset 42, :ns &quot;eckersdorf.workplaces.events&quot;} {:command &quot;(rf/reg-event-db\n  :db/load-storage\n  (fn [db [_ force?]]\n    (let [storage (db/load-local-storage)\n          last-login (:user/last-login storage)]\n      (if (or force? (and last-login (t/before? (t/now) (t/plus last-login (t/months 1)))))\n        (merge db storage)\n        db))))&quot;, :offset 282, :ns &quot;eckersdorf.db.events&quot;} {:command &quot;(rf/reg-event-db\n  :db/initialize-db\n  (fn [_ [_ load-storage?]]\n    (let [db (merge db/default-db\n                    window-state\n                    view-state\n                    error-state\n                    login-state\n                    user-state\n                    process-state\n                    workplaces-state)]\n      db)))&quot;, :offset 342, :ns &quot;eckersdorf.db.events&quot;} {:command &quot;(rf/dispatch [:db/initialize-db])&quot;, :offset 33, :ns &quot;eckersdorf.db.events&quot;} {:command &quot;(rf/dispatch [:workplaces/request-list])&quot;, :offset 40, :ns &quot;eckersdorf.workplaces.events&quot;} {:command &quot;(rf/reg-event-db\n  :workplaces/toggle-dialog\n  (fn [db _]\n    (update db :workplaces/show-dialog? not)))&quot;, :offset 104, :ns &quot;eckersdorf.workplaces.events&quot;} {:command &quot;(rf/subscribe [:workplaces/show-dialog?])&quot;, :offset 41, :ns &quot;eckersdorf.workplaces.events&quot;} {:command &quot;(rf/subscribe [:workplaces/workplace-form])&quot;, :offset 43, :ns &quot;eckersdorf.workplaces.ui&quot;} {:command &quot;(rf/reg-sub\n  :error/last-error\n  (fn [db]\n    (let [ks [:error/event :error/description :error/name]]\n      (reduce\n        (fn [ret k]\n          (assoc ret k (get k db)))\n        {} ks))))&quot;, :offset 190, :ns &quot;eckersdorf.error.subs&quot;} {:command &quot;(rf/subscribe [:error/last-error])&quot;, :offset 34, :ns &quot;eckersdorf.error.subs&quot;} {:command &quot;(ant/message-info \&quot;sex\&quot;)&quot;, :offset 24, :ns &quot;eckersdorf.view.ui&quot;} {:command &quot;(register-handler :fx\n                  :message\n                  (fn [{:keys [message] :as m}]\n                    (if-not (map? m)\n                      (console :error \&quot;re-frame: ignoring bad :dispatch-n value. Expected a map, but got:\&quot; value)\n                      (case type\n                        :info (ant/message-info (dissoc m :message) message)\n                        :success (ant/message-success (dissoc m :message) message)\n                        :warning (ant/message-warning (dissoc m :message) message)\n                        :error (ant/message-error (dissoc m :message) message)\n                        :loading (ant/message-loading (dissoc m :message) message)))))&quot;, :offset 689, :ns &quot;eckersdorf.init&quot;} {:command &quot;(register-handler :fx\n                  :dispatch-sync-n\n                  (fn [value]\n                    (if-not (sequential? value)\n                      (console :error \&quot;re-frame: ignoring bad :dispatch-n value. Expected a collection but got:\&quot; value))\n                    (doseq [event value] (router/dispatch-sync event))))&quot;, :offset 328, :ns &quot;eckersdorf.init&quot;} {:command &quot;(register-handler :fx\n                  :message\n                  (fn [{:keys [message] :as m}]\n                    (if-not (map? m)\n                      (console :error \&quot;re-frame: ignoring bad :dispatch-n value. Expected a map, but got:\&quot; m)\n                      (case type\n                        :info (ant/message-info (dissoc m :message) message)\n                        :success (ant/message-success (dissoc m :message) message)\n                        :warning (ant/message-warning (dissoc m :message) message)\n                        :error (ant/message-error (dissoc m :message) message)\n                        :loading (ant/message-loading (dissoc m :message) message)))))&quot;, :offset 685, :ns &quot;eckersdorf.init&quot;} {:command &quot;(register-handler :fx\n                  :message\n                  (fn [{:keys [message type] :as m}]\n                    (if-not (map? m)\n                      (console :error \&quot;re-frame: ignoring bad :dispatch-n value. Expected a map, but got:\&quot; m)\n                      (case type\n                        :info (ant/message-info (dissoc m :message :type) message)\n                        :success (ant/message-success (dissoc m :message :type) message)\n                        :warning (ant/message-warning (dissoc m :message :type) message)\n                        :error (ant/message-error (dissoc m :message :type) message)\n                        :loading (ant/message-loading (dissoc m :message :type) message)))))&quot;, :offset 720, :ns &quot;eckersdorf.init&quot;} {:command &quot;(register-handler :fx\n                  :message\n                  (fn [{:keys [message type] :as m}]\n                    (println :message m)\n                    (if-not (map? m)\n                      (console :error \&quot;re-frame: ignoring bad :dispatch-n value. Expected a map, but got:\&quot; m)\n                      (case type\n                        :info (ant/message-info (dissoc m :message :type) message)\n                        :success (ant/message-success (dissoc m :message :type) message)\n                        :warning (ant/message-warning (dissoc m :message :type) message)\n                        :error (ant/message-error (dissoc m :message :type) message)\n                        :loading (ant/message-loading (dissoc m :message :type) message)))))&quot;, :offset 761, :ns &quot;eckersdorf.init&quot;} {:command &quot;(register-handler :fx\n                  :message\n                  (fn [{:keys [message type] :as m}]\n                    (if-not (map? m)\n                      (console :error \&quot;re-frame: ignoring bad :dispatch-n value. Expected a map, but got:\&quot; m)\n                      (do\n                        (dissoc m :message :type)\n                        (case type\n                         :info (ant/message-info (dissoc m :message :type) message)\n                         :success (ant/message-success (dissoc m :message :type) message)\n                         :warning (ant/message-warning (dissoc m :message :type) message)\n                         :error (ant/message-error (dissoc m :message :type) message)\n                         :loading (ant/message-loading (dissoc m :message :type) message))))))&quot;, :offset 804, :ns &quot;eckersdorf.init&quot;} {:command &quot;(register-handler :fx\n                  :message\n                  (fn [{:keys [message type] :as m}]\n                    (println :message m (map? m))\n                    (if-not (map? m)\n                      (console :error \&quot;re-frame: ignoring bad :dispatch-n value. Expected a map, but got:\&quot; m)\n                      (case type\n                        :info (ant/message-info (dissoc m :message :type) message)\n                        :success (ant/message-success (dissoc m :message :type) message)\n                        :warning (ant/message-warning (dissoc m :message :type) message)\n                        :error (ant/message-error (dissoc m :message :type) message)\n                        :loading (ant/message-loading (dissoc m :message :type) message)))))&quot;, :offset 770, :ns &quot;eckersdorf.init&quot;} {:command &quot;(register-handler :fx\n                  :message\n                  (fn [{:keys [message type] :as m}]\n                    (if-not (map? m)\n                      (console :error \&quot;re-frame: ignoring bad :dispatch-n value. Expected a map, but got:\&quot; m)\n                      (do\n                        (println :message m (map? m))\n                        (case type\n                         :info (ant/message-info (dissoc m :message :type) message)\n                         :success (ant/message-success (dissoc m :message :type) message)\n                         :warning (ant/message-warning (dissoc m :message :type) message)\n                         :error (ant/message-error (dissoc m :message :type) message)\n                         :loading (ant/message-loading (dissoc m :message :type) message))))))&quot;, :offset 808, :ns &quot;eckersdorf.init&quot;} {:command &quot;(register-handler :fx\n                  :message\n                  (fn [{:keys [message type] :as m}]\n                    (if-not (map? m)\n                      (console :error \&quot;re-frame: ignoring bad :dispatch-n value. Expected a map, but got:\&quot; m)\n                      (do\n                        (ant/message-info \&quot;sex\&quot;)\n                        (println :message m (map? m))\n                        (ant/message-info \&quot;sex2\&quot;)\n                        (case type\n                         :info (ant/message-info (dissoc m :message :type) message)\n                         :success (ant/message-success (dissoc m :message :type) message)\n                         :warning (ant/message-warning (dissoc m :message :type) message)\n                         :error (ant/message-error (dissoc m :message :type) message)\n                         :loading (ant/message-loading (dissoc m :message :type) message))))))&quot;, :offset 907, :ns &quot;eckersdorf.init&quot;} {:command &quot;(antizer.reagent/message-info \&quot;sex\&quot;)&quot;, :offset 36, :ns &quot;eckersdorf.error.subs&quot;} {:command &quot;(rf/reg-event-fx\n  :message/test\n  (fn [_ _]\n    {:message {:type :info\n               :message \&quot;sex\&quot;}}))&quot;, :offset 105, :ns &quot;eckersdorf.error.subs&quot;} {:command &quot;(rf/dispatch [:message/test])&quot;, :offset 29, :ns &quot;eckersdorf.error.subs&quot;} {:command &quot;(register-handler :fx\n                  :message\n                  (fn [{:keys [message type duration] :as m}]\n                    (if-not (map? m)\n                      (console :error \&quot;re-frame: ignoring bad :dispatch-n value. Expected a map, but got:\&quot; m)\n                      (case type\n                        :info (ant/message-info (assoc (dissoc m :message :type) :duration (or duration 1.5)) message)\n                        :success (ant/message-success (assoc (dissoc m :message :type) :duration (or duration 1.5)) message)\n                        :warning (ant/message-warning (assoc (dissoc m :message :type) :duration (or duration 1.5)) message)\n                        :error (ant/message-error (assoc (dissoc m :message :type) :duration (or duration 1.5)) message)\n                        :loading (ant/message-loading (assoc (dissoc m :message :type) :duration (or duration 1.5)) message)))))&quot;, :offset 909, :ns &quot;eckersdorf.init&quot;} {:command &quot;(register-handler :fx\n                  :message\n                  (fn [{:keys [message type duration] :as m}]\n                    (if-not (map? m)\n                      (console :error \&quot;re-frame: ignoring bad :dispatch-n value. Expected a map, but got:\&quot; m)\n                      (case type\n                        :info (ant/message-info message (or duration 1.5))\n                        :success (ant/message-success message message (or duration 1.5))\n                        :warning (ant/message-warning message message (or duration 1.5))\n                        :error (ant/message-error message message (or duration 1.5))\n                        :loading (ant/message-loading message message (or duration 1.5))))))&quot;, :offset 721, :ns &quot;eckersdorf.init&quot;} {:command &quot;(register-handler :fx\n                  :message\n                  (fn [{:keys [message type duration] :as m}]\n                    (if-not (map? m)\n                      (console :error \&quot;re-frame: ignoring bad :dispatch-n value. Expected a map, but got:\&quot; m)\n                      (case type\n                        :info (ant/message-info message (or duration 3.5))\n                        :success (ant/message-success message message (or duration 3.5))\n                        :warning (ant/message-warning message message (or duration 3.5))\n                        :error (ant/message-error message message (or duration 3.5))\n                        :loading (ant/message-loading message message (or duration 3.5))))))&quot;, :offset 721, :ns &quot;eckersdorf.init&quot;} {:command &quot;(register-handler :fx\n                  :message\n                  (fn [{:keys [message type duration] :as m}]\n                    (if-not (map? m)\n                      (console :error \&quot;re-frame: ignoring bad :dispatch-n value. Expected a map, but got:\&quot; m)\n                      (case type\n                        :info (ant/message-info message (or duration 3.5))\n                        :success (ant/message-success message (or duration 3.5))\n                        :warning (ant/message-warning message (or duration 3.5))\n                        :error (ant/message-error message (or duration 3.5))\n                        :loading (ant/message-loading message (or duration 3.5))))))&quot;, :offset 689, :ns &quot;eckersdorf.init&quot;} {:command &quot;(rf/reg-event-fx\n  :workplaces/request-create-failure\n  (fn [{db :db} [_ response]]\n    {:dispatch [:error/set {:event :workplaces/request-update\n                            :desc  response}]\n     :message  {:message  (str response)\n                :type     :error\n                :duration 10}}))&quot;, :offset 298, :ns &quot;eckersdorf.workplaces.events&quot;} {:command &quot;(rf/reg-event-fx\n  :workplaces/request-delete\n  (fn [{db :db} [_ id]]\n    (let [workplace (:workplaces/workplace-form db)]\n      {:http-xhrio {:method          :delete\n                    :uri             (path \&quot;/api/1.0/workplaces\&quot; id)\n                    :format          (ajax/text-request-format)\n                    :response-format (ajax/text-request-format)\n                    :on-success      [:workplaces/request-delete-success]\n                    :on-failure      [:workplaces/request-delete-failure]}})))&quot;, :offset 517, :ns &quot;eckersdorf.workplaces.events&quot;} {:command &quot;(rf/reg-event-fx\n  :workplaces/request-delete-success\n  (fn [{db :db} [_ response]]\n    (timbre/info response)\n    {:db         (merge db response)\n     :dispatch-n [[:workplaces/request-list]\n                  [:workplaces/hide-dialog]]\n     :message    {:content  \&quot;poprawnie usunięto obiekt\&quot;\n                  :type     :success\n                  :duration 3}}))&quot;, :offset 364, :ns &quot;eckersdorf.workplaces.events&quot;} {:command &quot;(rf/reg-event-fx\n  :workplaces/request-delete-failure\n  (fn [{db :db} [_ {:keys [status-text] :as response}]]\n    {:dispatch [:error/set {:event :workplaces/request-update\n                            :desc  response}]\n     :message  {:content  (str \&quot;błąd przy usuwaniu obiektu: \&quot; status-text)\n                :type     :error\n                :duration 3}}))&quot;, :offset 357, :ns &quot;eckersdorf.workplaces.events&quot;} {:command &quot;(rf/reg-event-fx\n  :workplaces/request-delete\n  (fn [{db :db} [_ id]]\n    {:http-xhrio {:method          :delete\n                  :uri             (path \&quot;/api/1.0/workplaces\&quot; id)\n                  :format          (ajax/text-request-format)\n                  :response-format (ajax/text-request-format)\n                  :on-success      [:workplaces/request-delete-success]\n                  :on-failure      [:workplaces/request-delete-failure]}}))&quot;, :offset 451, :ns &quot;eckersdorf.workplaces.events&quot;} {:command &quot;(rf/reg-event-fx\n  :workplaces/request-delete\n  (fn [{db :db} [_ id]]\n    (println id)\n    {:http-xhrio {:method          :delete\n                  :uri             (path \&quot;/api/1.0/workplaces\&quot; id)\n                  :format          (ajax/text-request-format)\n                  :response-format (ajax/text-request-format)\n                  :on-success      [:workplaces/request-delete-success]\n                  :on-failure      [:workplaces/request-delete-failure]}}))&quot;, :offset 468, :ns &quot;eckersdorf.workplaces.events&quot;} {:command &quot;(defn workplaces-list []\n  (let [workplaces-list (rf/subscribe [:workplaces/list])]\n    (fn []\n      [ant/table {:columns    [{:title     \&quot;nazwa\&quot;\n                                :dataIndex :workplace/name\n                                :key       :workplace/name}\n                               {:title     \&quot;typ\&quot;\n                                :dataIndex :workplace/type\n                                :key       :workplace/type}\n                               {:title     \&quot;e-mail\&quot;\n                                :dataIndex :workplace/email-address\n                                :key       :workplace/email-address}\n                               {:title     \&quot;ulica\&quot;\n                                :dataIndex \&quot;address.street-name\&quot;\n                                :key       \&quot;address.street-name\&quot;}\n                               {:title     \&quot;numer ulicy\&quot;\n                                :dataIndex \&quot;address.street-number\&quot;\n                                :key       \&quot;address.street-number\&quot;}\n                               {:title     \&quot;numer budynku\&quot;\n                                :dataIndex \&quot;address.house-number\&quot;\n                                :key       \&quot;address.house-number\&quot;\n                                :render    #(or % \&quot;brak\&quot;)}\n                               {:title     \&quot;kod pocztowy\&quot;\n                                :dataIndex \&quot;address.zip-code\&quot;\n                                :key       \&quot;address.zip-code\&quot;}\n                               {:title     \&quot;miejscowość\&quot;\n                                :dataIndex \&quot;address.city\&quot;\n                                :key       \&quot;address.city\&quot;}\n                               {:title  \&quot;akcje\&quot;\n                                :render (fn [_ record _]\n                                          (let [email-address (aget record \&quot;email-address\&quot;)\n                                                object-id (aget record \&quot;object-id\&quot;)]\n                                            (r/as-element\n                                              [ant/button-group\n                                               [ant/button {:icon     :delete\n                                                            :type     :danger\n                                                            :on-click (fn []\n                                                                        (println \&quot;try to delete\&quot; email-address \&quot; \&quot; object-id)\n                                                                        (rf/dispatch [:workplaces/request-delete object-id]))}]\n                                               [ant/button {:icon     :edit\n                                                            :on-click (fn []\n                                                                        (let [workplace (-&gt; record\n                                                                                            (js-&gt;clj :keywordize-keys true)\n                                                                                            (add-ns :workplace)\n                                                                                            (set/rename-keys {:workplace/object-id :mongo/object-id})\n                                                                                            (update :workplace/address add-ns :address))]\n                                                                          (rf/dispatch [:workplaces/modify-workplace-dialog workplace])))}]])))}]\n                  :dataSource (map-indexed (fn [i m] (assoc m :id i)) @workplaces-list)\n                  :row-key    \&quot;id\&quot;\n                  :pagination false}])))&quot;, :offset 3579, :ns &quot;eckersdorf.workplaces.ui&quot;} {:command &quot;(rf/reg-event-fx\n  :workplaces/request-delete-success\n  (fn [{db :db} [_ response]]\n    (timbre/info response)\n    {:db         (merge db response)\n     :dispatch-n [[:workplaces/request-list]]\n     :message    {:content  \&quot;poprawnie usunięto obiekt\&quot;\n                  :type     :success\n                  :duration 3}}))&quot;, :offset 320, :ns &quot;eckersdorf.workplaces.events&quot;} {:command &quot;(rf/reg-event-fx\n  :workplaces/request-update\n  (fn [{db :db} _]\n    (let [id (get-in db [:workplaces/workplace-form :mongo/object-id])\n          workplace (-&gt; db :workplaces/workplace-form (dissoc :object-id))]\n      (println :workplaces/request-update id workplace)\n      {:http-xhrio {:method          :put\n                    :uri             (path \&quot;/api/1.0/workplaces\&quot; id)\n                    :params          workplace\n                    :format          (ajax/text-request-format)\n                    :response-format (ajax/json-response-format {:keywords? true})\n                    :on-success      [:workplaces/request-update-success]\n                    :on-failure      [:workplaces/request-update-failure]}}\n      )))&quot;, :offset 732, :ns &quot;eckersdorf.workplaces.events&quot;} {:command &quot;(rf/reg-event-fx\n  :workplaces/request-update\n  (fn [{db :db} _]\n    (let [id (get-in db [:workplaces/workplace-form :mongo/object-id])\n          workplace (-&gt; db :workplaces/workplace-form (dissoc :mongo/object-id))]\n      (println :workplaces/request-update id workplace)\n      {:http-xhrio {:method          :put\n                    :uri             (path \&quot;/api/1.0/workplaces\&quot; id)\n                    :params          workplace\n                    :format          (ajax/text-request-format)\n                    :response-format (ajax/json-response-format {:keywords? true})\n                    :on-success      [:workplaces/request-update-success]\n                    :on-failure      [:workplaces/request-update-failure]}}\n      )))&quot;, :offset 738, :ns &quot;eckersdorf.workplaces.events&quot;} {:command &quot;(defn workplace-dialog [modify?]\n  (let [show-dialog? (rf/subscribe [:workplaces/show-dialog?])\n        workplace-form (rf/subscribe [:workplaces/workplace-form])\n        email-addon (reaction (str \&quot;@\&quot; (or (second (str/split (:workplace/email-address @workplace-form) \&quot;@\&quot;))\n                                           \&quot;teas.com.pl\&quot;)))\n        valid-workplace (r/atom nil)]\n    (fn []\n      [ant/modal {:visible (not (nil? @show-dialog?))\n                  :title   (if (#{:modify} @show-dialog?) \&quot;edytuj sklep\&quot; \&quot;dodaj sklep\&quot;)\n                  :footer  (r/as-element [:div\n                                          [ant/button {:on-click #(rf/dispatch [:workplaces/hide-dialog])}\n                                           \&quot;anuluj\&quot;]\n                                          [ant/button {:type     (if (s/valid? :workplace/workplace @workplace-form)\n                                                                   :primary :danger)\n                                                       :on-click (fn []\n                                                                   (if (s/valid? :workplace/workplace @workplace-form)\n                                                                     (if (not (#{:modify} @show-dialog?))\n                                                                       (rf/dispatch [:workplaces/request-create])\n                                                                       (rf/dispatch [:workplaces/request-update]))\n                                                                     (do\n                                                                       (println (s/explain :workplace/workplace @workplace-form))\n                                                                       (ant/message-warning \&quot;wprowadzono błędne dane\&quot;))))}\n                                           \&quot;dodaj\&quot;]])}\n       [flex/vbox\n        [ant/form {:layout :horizontal}\n         [ant/form-item\n          [flex/hbox\n           [flex/box {:size  2\n                      :style {:display    :block\n                              :min-height \&quot;32px\&quot;}}\n            (let [{:keys [workplace/name]} @workplace-form]\n              [ant/form-item {:validate-status (when (and (not (nil? name))\n                                                          (not (s/valid? :workplace/name name)))\n                                                 :error)\n                              :help            (cond\n                                                 (and (not (nil? name))\n                                                      (not (s/valid? :workplace/name name)))\n                                                 \&quot;pole nie może być puste\&quot;)}\n               [ant/input {:placeholder \&quot;nazwa\&quot;\n                           :value       name\n                           :on-change   (fn [e]\n                                          (let [val (-&gt; e .-target .-value)\n                                                workplace (assoc @workplace-form :workplace/name val)]\n                                            (rf/dispatch [:workplaces/set-workplace-form workplace])))}]])]\n           [flex/gap {:size \&quot;12px\&quot;}]\n           [flex/box {:size  2\n                      :style {:display    :block\n                              :min-height \&quot;32px\&quot;}}\n            (let [{:keys [workplace/email-address]} @workplace-form\n                  email-address (first (str/split email-address \&quot;@\&quot;))]\n              [ant/form-item {:validate-status (when (and (not (nil? email-address))\n                                                          (not (s/valid? :workplace/email-address\n                                                                         (str email-address @email-addon))))\n                                                 :error)\n                              :help            (cond\n                                                 (str/empty? email-address)\n                                                 \&quot;pole nie może być puste\&quot;\n                                                 (and (not (nil? email-address))\n                                                      (not (s/valid? :workplace/email-address\n                                                                     (str email-address @email-addon))))\n                                                 \&quot;błędny adres email\&quot;)}\n               [ant/input {:placeholder \&quot;e-mail\&quot;\n                           :value       email-address\n                           :addon-after @email-addon\n                           :on-change   (fn [e]\n                                          (let [val (-&gt; e .-target .-value)\n                                                workplace (assoc @workplace-form :workplace/email-address\n                                                                                 (if-not (str/empty-or-nil? val)\n                                                                                   (str val @email-addon)\n                                                                                   \&quot;\&quot;))]\n                                            (rf/dispatch [:workplaces/set-workplace-form workplace])))}]])]\n           [flex/gap {:size \&quot;12px\&quot;}]\n           [flex/box {:size  1\n                      :style {:display    :block\n                              :min-height \&quot;32px\&quot;}}\n            [ant/form-item\n             [ant/select {:value     (or (:workplace/type @workplace-form) \&quot;dc\&quot;)\n                          :on-change (fn [val]\n                                       (let [workplace (assoc @workplace-form :workplace/type val)]\n                                         (rf/dispatch [:workplaces/set-workplace-form workplace])))}\n              [ant/select-option {:value \&quot;dc\&quot;} \&quot;delikatesy\&quot;]\n              [ant/select-option {:value \&quot;shop\&quot;} \&quot;niezrzeszony\&quot;]]]]]]\n         [ant/form-item\n          [flex/hbox\n           [flex/box {:size  3\n                      :style {:display    :block\n                              :min-height \&quot;32px\&quot;}}\n            (let [{{:keys [address/street-name]} :workplace/address} @workplace-form]\n              [ant/form-item {:validate-status (when (and (not (nil? street-name))\n                                                          (not (s/valid? :address/street-name street-name)))\n                                                 :error)\n                              :help            (cond\n                                                 (str/empty? street-name)\n                                                 \&quot;pole nie może być puste\&quot;\n                                                 (and (not (nil? street-name))\n                                                      (not (s/valid? :address/street-name street-name)))\n                                                 \&quot;błędna nazwa ulicy\&quot;)}\n               [ant/input {:placeholder \&quot;ulica\&quot;\n                           :value       street-name\n                           :on-change   (fn [e]\n                                          (let [val (-&gt; e .-target .-value)\n                                                workplace (assoc-in @workplace-form\n                                                                    [:workplace/address :address/street-name]\n                                                                    val)]\n                                            (rf/dispatch [:workplaces/set-workplace-form workplace])))}]])]\n           [flex/gap {:size \&quot;12px\&quot;}]\n           [flex/box {:size  1\n                      :style {:display    :block\n                              :min-height \&quot;32px\&quot;}}\n            (let [{{:keys [address/street-number]} :workplace/address} @workplace-form]\n              [ant/form-item {:validate-status (when\n                                                 (and (not (nil? street-number))\n                                                      (not (s/valid? :address/street-number street-number)))\n                                                 :error)\n                              :help            (cond\n                                                 (str/empty? street-number)\n                                                 \&quot;pole nie może być puste\&quot;\n                                                 (and (not (nil? street-number))\n                                                      (not (s/valid? :address/street-number street-number)))\n                                                 \&quot;błędny numer ulicy\&quot;)}\n               [ant/input {:placeholder \&quot;numer ulicy\&quot;\n                           :value       street-number\n                           :on-change   (fn [e]\n                                          (let [val (-&gt; e .-target .-value)\n                                                workplace (assoc-in @workplace-form\n                                                                    [:workplace/address :address/street-number]\n                                                                    val)]\n                                            (rf/dispatch [:workplaces/set-workplace-form workplace])))}]])]\n           [flex/gap {:size \&quot;12px\&quot;}]\n           [flex/box {:size  1\n                      :style {:display    :block\n                              :min-height \&quot;32px\&quot;}}\n            (let [{{:keys [address/house-number]} :workplace/address} @workplace-form]\n              [ant/form-item {:validate-status (when (and (not (nil? house-number))\n                                                          (not (s/valid? :address/house-number house-number)))\n                                                 :error)\n                              :help            (cond\n                                                 (and (not (nil? house-number))\n                                                      (not (s/valid? :address/house-number house-number)))\n                                                 \&quot;błędny numer budynku\&quot;)}\n               [ant/input {:placeholder \&quot;budynku\&quot;\n                           :value       house-number\n                           :on-change   (fn [e]\n                                          (let [val (-&gt; e .-target .-value)\n                                                workplace (assoc-in @workplace-form [:workplace/address :address/house-number] val)]\n                                            (rf/dispatch [:workplaces/set-workplace-form workplace])))}]])]]]\n         [ant/form-item\n          [flex/hbox\n           [flex/box {:size  1\n                      :style {:display    :block\n                              :min-height \&quot;32px\&quot;}}\n            (let [{{:keys [address/zip-code]} :workplace/address} @workplace-form]\n              [ant/form-item {:validate-status (when (and (not (nil? zip-code))\n                                                          (not (s/valid? :address/zip-code zip-code)))\n                                                 :error)\n                              :help            (cond\n                                                 (str/empty? zip-code)\n                                                 \&quot;pole nie może być puste\&quot;\n                                                 (and (not (nil? zip-code))\n                                                      (not (s/valid? :address/zip-code zip-code)))\n                                                 \&quot;błędny kod pocztowy\&quot;)}\n               [ant/input {:placeholder \&quot;kod pocztowy\&quot;\n                           :value       zip-code\n                           :on-change   (fn [e]\n                                          (let [val (-&gt; e .-target .-value)\n                                                workplace (assoc-in @workplace-form [:workplace/address :address/zip-code] val)]\n                                            (rf/dispatch [:workplaces/set-workplace-form workplace])))}]])]\n           [flex/gap {:size \&quot;12px\&quot;}]\n           [flex/box {:size  3\n                      :style {:display    :block\n                              :min-height \&quot;32px\&quot;}}\n            (let [{{:keys [address/city]} :workplace/address} @workplace-form]\n              [ant/form-item {:validate-status (when (and (not (nil? city))\n                                                          (not (s/valid? :address/city city)))\n                                                 :error)\n                              :help            (cond\n                                                 (str/empty? city)\n                                                 \&quot;pole nie może być puste\&quot;\n                                                 (and (not (nil? city))\n                                                      (not (s/valid? :address/city city)))\n                                                 \&quot;błędna nazwa miejscowości\&quot;)}\n               [ant/input {:placeholder \&quot;miejscowość\&quot;\n                           :value       city\n                           :on-change   (fn [e]\n                                          (let [val (-&gt; e .-target .-value)\n                                                workplace (assoc-in @workplace-form [:workplace/address :address/city] val)]\n                                            (rf/dispatch [:workplaces/set-workplace-form workplace])))}]])]]]]]])))&quot;, :offset 13035, :ns &quot;eckersdorf.workplaces.ui&quot;} {:command &quot;(rf/reg-sub\n  :work-schedule/main-date\n  (fn [db _]\n    (:work-schedule/main-date db)))&quot;, :offset 87, :ns &quot;eckersdorf.work-schedule.subs&quot;} {:command &quot;(rf/subscribe [:work-schedule/main-date])&quot;, :offset 41, :ns &quot;eckersdorf.work-schedule.subs&quot;} {:command &quot;@(rf/subscribe [:work-schedule/main-date])&quot;, :offset 42, :ns &quot;eckersdorf.work-schedule.subs&quot;} {:command &quot;@(rf/subscribe [:work-schedule/short-date])&quot;, :offset 43, :ns &quot;eckersdorf.work-schedule.subs&quot;} {:command &quot;@(rf/subscribe [:work-schedule/long-date])&quot;, :offset 42, :ns &quot;eckersdorf.work-schedule.subs&quot;} {:command &quot;@(rf/subscribe [:work-schedule/days])&quot;, :offset 37, :ns &quot;eckersdorf.work-schedule.subs&quot;} {:command &quot;(s/def :workplace/working-hours {0 {:open int? :close int?}})&quot;, :offset 61, :ns &quot;eckersdorf.db.specs&quot;} {:command &quot;(s/def :workplace/working-hours {int? {:open int? :close int?}})&quot;, :offset 64, :ns &quot;eckersdorf.db.specs&quot;} {:command &quot;(ns eckersdorf.work-schedule.ui\n  (:require [cljs.spec.alpha :as s]\n            [reagent.core :as r]\n            [reagent.ratom :refer [reaction]]\n            [re-frame.core :as rf]\n            [antizer.reagent :as ant]\n            [cuerdas.core :as str]\n            [eckersdorf.flex :as flex]\n            [eckersdorf.utils :refer [add-ns simplify-string]]\n            [clojure.set :as set]\n            [cljsjs.moment.locale.pl]\n            [cljs-time.coerce :as dtc]))&quot;, :offset 469, :ns &quot;eckersdorf.work-schedule.ui&quot;} {:command &quot;(s/def :datetime/iso-string (s/and string? #(re-find \&quot;\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z)\&quot;)))&quot;, :offset 130, :ns &quot;eckersdorf.db.specs&quot;} {:command &quot;(s/def :datetime/iso-string (s/and string? #(re-find \&quot;^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*)?)([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$\&quot;)))&quot;, :offset 123, :ns &quot;eckersdorf.db.specs&quot;} {:command &quot;(s/def :email-address/email-address (s/and string? #(re-find #\&quot;(^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+\\.[a-zA-Z0-9-.]+$)\&quot; %)))&quot;, :offset 119, :ns &quot;eckersdorf.db.specs&quot;} {:command &quot;(s/def :datetime/iso-string (s/and string? #(re-find \&quot;^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*)?)([zZ]|([+\\-])(\\d\\d):?(\\d\\d))\&quot;)))&quot;, :offset 121, :ns &quot;eckersdorf.db.specs&quot;} {:command &quot;(s/def :datetime/iso-string (s/and string? #(re-find \&quot;^(\\d{4})(-(\\d{2}))??(-(\\d{2}))??(T(\\d{2}):(\\d{2})(:(\\d{2}))??(\\.(\\d+))??(([\\+\\-]{1}\\d{2}:\\d{2})|Z)??)??$\&quot;)))&quot;, :offset 162, :ns &quot;eckersdorf.db.specs&quot;} {:command &quot;(s/def :datetime/iso-string (s/and string? #(re-find \&quot;^(\\d{4})(-(\\d{2}))??(-(\\d{2}))??(T(\\d{2}):(\\d{2})(:(\\d{2}))??(\\.(\\d+))??(([\\+\\-]{1}\\d{2}:\\d{2})|Z)??)\&quot;)))&quot;, :offset 159, :ns &quot;eckersdorf.db.specs&quot;} {:command &quot;(s/def :datetime/iso-string (s/and string? #(re-find \&quot;\\\&quot;^(\\\\d{4})(-(\\\\d{2}))??(-(\\\\d{2}))??(T(\\\\d{2}):(\\\\d{2})(:(\\\\d{2}))??(\\\\.(\\\\d+))??(([\\\\+\\\\-]{1}\\\\d{2}:\\\\d{2})|Z)??)??$\\\&quot;\&quot;)))&quot;, :offset 178, :ns &quot;eckersdorf.db.specs&quot;} {:command &quot;(re-pattern \&quot;^(\\d{4})(-(\\d{2}))??(-(\\d{2}))??(T(\\d{2}):(\\d{2})(:(\\d{2}))??(\\.(\\d+))??(([\\+\\-]{1}\\d{2}:\\d{2})|Z)??)??$\&quot;)&quot;, :offset 119, :ns &quot;eckersdorf.db.specs&quot;} {:command &quot;(re-pattern \&quot;^(d{4})(-(d{2}))??(-(d{2}))??(T(d{2}):(d{2})(:(d{2}))??(.(d+))??(([+-]{1}d{2}:d{2})|Z)??)??$\&quot;)&quot;, :offset 107, :ns &quot;eckersdorf.db.specs&quot;} {:command &quot;(s/def :datetime/iso-string (s/and string? #\&quot;^(d{4})(-(d{2}))??(-(d{2}))??(T(d{2}):(d{2})(:(d{2}))??(.(d+))??(([+-]{1}d{2}:d{2})|Z)??)??$\&quot;))&quot;, :offset 140, :ns &quot;eckersdorf.db.specs&quot;} {:command &quot;(defn select-month []\n  (let [main-date (rf/subscribe [:work-schedule/main-date])]\n    (fn []\n      [ant/form-item\n       [ant/date-picker-month-picker {:default-value (js/moment)\n                                      :value (-&gt; js/moment)\n                                      :on-change     (fn [date]\n                                                       (println\n                                                         (-&gt; date\n                                                             (.toIsoString))))}]])))&quot;, :offset 518, :ns &quot;eckersdorf.work-schedule.ui&quot;} {:command &quot;(re-find #\&quot;^(d{4})(-(d{2}))??(-(d{2}))??(T(d{2}):(d{2})(:(d{2}))??(.(d+))??(([+-]{1}d{2}:d{2})|Z)??)??$\&quot;\n         \&quot;2017-01-24T18:32:04.908Z\&quot;)&quot;, :offset 141, :ns &quot;eckersdorf.db.specs&quot;} {:command &quot;(re-find #\&quot;^(\\d{4})(-(\\d{2}))??(-(\\d{2}))??(T(\\d{2}):(\\d{2})(:(\\d{2}))??(\\.(\\d+))??(([\\+\\-]{1}\\d{2}:\\d{2})|Z)??)??$\&quot;\n         \&quot;2017-01-24T18:32:04.908Z\&quot;)&quot;, :offset 153, :ns &quot;eckersdorf.db.specs&quot;} {:command &quot;(re-find #\&quot;^(\\d{4})(-(\\d{2}))??(-(\\d{2}))??(T(\\d{2}):(\\d{2})(:(\\d{2}))??(\\.(\\d+))??(([\\+\\-]{1}\\d{2}:\\d{2})|Z)??)??$\&quot;\n         \&quot;2017-01-24T18:32:04.908\&quot;)&quot;, :offset 152, :ns &quot;eckersdorf.db.specs&quot;} {:command &quot;(re-find #\&quot;^(\\d{4})(-(\\d{2}))??(-(\\d{2}))??(T(\\d{2}):(\\d{2})(:(\\d{2}))??(\\.(\\d+))??(([\\+\\-]{1}\\d{2}:\\d{2})|Z)??)??$\&quot;\n         \&quot;2017-01-24T18:32:04.9\&quot;)&quot;, :offset 150, :ns &quot;eckersdorf.db.specs&quot;} {:command &quot;(rf/subscribe [:workers/list])&quot;, :offset 30, :ns &quot;eckersdorf.workers.subs&quot;} {:command &quot;(rf/reg-sub\n  :workers/by-workplace-id\n  :&lt;- [:workers/list]\n  (fn [workers [_ workplace-id]]\n    workplace-id))&quot;, :offset 112, :ns &quot;eckersdorf.workers.subs&quot;} {:command &quot;(rf/subscribe [:workers/by-workplace-id \&quot;111\&quot;])&quot;, :offset 47, :ns &quot;eckersdorf.workers.subs&quot;} {:command &quot;(rf/reg-sub\n  :workers/by-workplace-id\n  :&lt;- [:workers/list]\n  (fn [workers [_ workplace-id]]\n    (-&gt;&gt; workers\n         (filter #(= workplace-id (:worker/workplace %))))))&quot;, :offset 171, :ns &quot;eckersdorf.workers.subs&quot;} {:command &quot;(rf/subscribe [:workers/by-workplace-id \&quot;59cd4fc48466bc2056615d661\&quot;])&quot;, :offset 69, :ns &quot;eckersdorf.workers.subs&quot;} {:command &quot;(rf/subscribe [:workers/by-workplace-id \&quot;59cd4fc48466bc2056615d66\&quot;])&quot;, :offset 68, :ns &quot;eckersdorf.workers.subs&quot;} {:command &quot;(s/def ::mytest (s/nilable string?))&quot;, :offset 36, :ns &quot;eckersdorf.db.specs&quot;} {:command &quot;(ns eckersdorf.figwheel\n  (:require [figwheel-sidecar.repl-api :refer :all]))&quot;, :offset 77, :ns &quot;eckersdorf.figwheel&quot;} {:command &quot;(cljs-repl)&quot;, :offset 11, :ns &quot;eckersdorf.figwheel&quot;} {:command &quot;(ns eckersdorf.repl\n  (:require [cljs-time.core :as dt]))&quot;, :offset 57, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(let [now (dt/now)]\n  (distinct [now (dt/plus now (dt/hours 1)) now]))&quot;, :offset 70, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(let [now (dt/now)]\n  (distinct [now (dt/plus now (dt/hours 1)) (dt/plus now (dt/hours 2))]))&quot;, :offset 93, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(let [now (dt/now)]\n  (distinct [{:a now} {:a (dt/plus now (dt/hours 1))}]))&quot;, :offset 76, :ns &quot;eckersdorf.repl&quot;} {:command &quot;(rf/dispatch [:work-schedule/clear])&quot;, :offset 36, :ns &quot;eckersdorf.work-schedule.subs&quot;}]}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Clojure REPL.figwheel">
    <configuration default="true" type="Applet" factoryName="Applet">
      <option name="WIDTH" value="400" />
      <option name="HEIGHT" value="300" />
      <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
      <module />
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <option name="MAIN_CLASS_NAME" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="ENABLE_SWING_INSPECTOR" value="false" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <module name="" />
      <envs />
    </configuration>
    <configuration default="true" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType" factoryName="Plugin">
      <module name="" />
      <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea" />
      <option name="PROGRAM_PARAMETERS" />
      <predefined_log_file id="idea.log" enabled="true" />
    </configuration>
    <configuration default="true" type="Remote" factoryName="Remote">
      <option name="USE_SOCKET_TRANSPORT" value="true" />
      <option name="SERVER_MODE" value="false" />
      <option name="SHMEM_ADDRESS" value="javadebug" />
      <option name="HOST" value="localhost" />
      <option name="PORT" value="5005" />
    </configuration>
    <configuration default="true" type="Remote" factoryName="Remote">
      <option name="USE_SOCKET_TRANSPORT" value="true" />
      <option name="SERVER_MODE" value="false" />
      <option name="SHMEM_ADDRESS" value="javadebug" />
      <option name="HOST" value="localhost" />
      <option name="PORT" value="5005" />
    </configuration>
    <configuration default="true" type="Remote" factoryName="Remote">
      <option name="USE_SOCKET_TRANSPORT" value="true" />
      <option name="SERVER_MODE" value="false" />
      <option name="SHMEM_ADDRESS" value="javadebug" />
      <option name="HOST" value="localhost" />
      <option name="PORT" value="5005" />
    </configuration>
    <configuration default="true" type="Remote" factoryName="Remote">
      <option name="USE_SOCKET_TRANSPORT" value="true" />
      <option name="SERVER_MODE" value="false" />
      <option name="SHMEM_ADDRESS" value="javadebug" />
      <option name="HOST" value="localhost" />
      <option name="PORT" value="5005" />
    </configuration>
    <configuration default="true" type="Remote" factoryName="Remote">
      <option name="USE_SOCKET_TRANSPORT" value="true" />
      <option name="SERVER_MODE" value="false" />
      <option name="SHMEM_ADDRESS" value="javadebug" />
      <option name="HOST" value="localhost" />
      <option name="PORT" value="5005" />
    </configuration>
    <configuration default="true" type="Remote" factoryName="Remote">
      <option name="USE_SOCKET_TRANSPORT" value="true" />
      <option name="SERVER_MODE" value="false" />
      <option name="SHMEM_ADDRESS" value="javadebug" />
      <option name="HOST" value="localhost" />
      <option name="PORT" value="5005" />
    </configuration>
    <configuration default="true" type="Remote" factoryName="Remote">
      <option name="USE_SOCKET_TRANSPORT" value="true" />
      <option name="SERVER_MODE" value="false" />
      <option name="SHMEM_ADDRESS" value="javadebug" />
      <option name="HOST" value="localhost" />
      <option name="PORT" value="5005" />
    </configuration>
    <configuration default="true" type="Remote" factoryName="Remote">
      <option name="USE_SOCKET_TRANSPORT" value="true" />
      <option name="SERVER_MODE" value="false" />
      <option name="SHMEM_ADDRESS" value="javadebug" />
      <option name="HOST" value="localhost" />
      <option name="PORT" value="5005" />
    </configuration>
    <configuration name="eckersdorf.util" type="ClojureScriptRunConfiguration" factoryName="Clojure Script" temporary="true">
      <module name="eckersdorf" />
      <setting name="path" value="$PROJECT_DIR$/src/cljs/eckersdorf/util.cljs" />
      <setting name="namespace" value="" />
      <setting name="useLein" value="false" />
      <setting name="profiles" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workDir" value="$PROJECT_DIR$/src/cljs/eckersdorf" />
    </configuration>
    <configuration name="figwheel" type="ClojureREPL" factoryName="Remote">
      <setting name="host" value="localhost" />
      <setting name="port" value="7002" />
      <setting name="replType" value="0" />
      <module name="eckersdorf" />
    </configuration>
    <configuration name="lein" type="ClojureREPL" factoryName="Local">
      <setting name="replType" value="1" />
      <module name="eckersdorf" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
    </configuration>
    <list size="3">
      <item index="0" class="java.lang.String" itemvalue="Clojure REPL.lein" />
      <item index="1" class="java.lang.String" itemvalue="Clojure REPL.figwheel" />
      <item index="2" class="java.lang.String" itemvalue="Clojure Application.eckersdorf.util" />
    </list>
    <recent_temporary>
      <list size="1">
        <item index="0" class="java.lang.String" itemvalue="Clojure Application.eckersdorf.util" />
      </list>
    </recent_temporary>
  </component>
  <component name="ShelveChangesManager" show_recycled="false">
    <option name="remove_strategy" value="false" />
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="2d15cdde-731e-425d-93a7-18dba581f6ee" name="Default" comment="" />
      <created>1507756708400</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1507756708400</updated>
      <workItem from="1507756713340" duration="7165000" />
      <workItem from="1508091606158" duration="23499000" />
      <workItem from="1508271432360" duration="8241000" />
      <workItem from="1508681321148" duration="13175000" />
      <workItem from="1508861845101" duration="40262000" />
      <workItem from="1509094198154" duration="109000" />
      <workItem from="1509094332350" duration="3221000" />
      <workItem from="1509144365125" duration="2193000" />
    </task>
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="97865000" />
  </component>
  <component name="ToolWindowManager">
    <frame x="13" y="12" width="1340" height="743" extended-state="0" />
    <layout>
      <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Palette&#9;" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="true" content_ui="tabs" />
      <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="REPL" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.21517028" sideWeight="0.5" order="6" side_tool="true" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Leiningen" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.18343653" sideWeight="0.4939759" order="1" side_tool="false" content_ui="combo" />
      <window_info id="Database" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.24962178" sideWeight="0.5060241" order="6" side_tool="true" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.3990964" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Tool" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="combo" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Image Layers" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Analysis" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32779622" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Theme Preview" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
    </layout>
    <layout-to-restore>
      <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="true" content_ui="tabs" />
      <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="REPL" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.24534687" sideWeight="0.5" order="6" side_tool="true" content_ui="tabs" />
      <window_info id="Leiningen" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Tool" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="combo" />
      <window_info id="Database" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.3990964" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Palette&#9;" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
      <window_info id="Image Layers" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Analysis" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.17766498" sideWeight="0.4939759" order="1" side_tool="false" content_ui="combo" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32882884" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Theme Preview" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.24962178" sideWeight="0.5060241" order="6" side_tool="true" content_ui="tabs" />
    </layout-to-restore>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager />
    <watches-manager />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/src/cljs/eckersdorf/workplaces/ui.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="307">
          <caret line="92" column="14" lean-forward="false" selection-start-line="92" selection-start-column="14" selection-end-line="92" selection-end-column="60" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/cljs/eckersdorf/workers/db.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="230">
          <caret line="10" column="44" lean-forward="false" selection-start-line="10" selection-start-column="44" selection-end-line="10" selection-end-column="44" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/cljs/eckersdorf/view/ui.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="460">
          <caret line="29" column="50" lean-forward="true" selection-start-line="29" selection-start-column="50" selection-end-line="29" selection-end-column="50" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/cljs/eckersdorf/workplaces/subs.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="437">
          <caret line="19" column="25" lean-forward="false" selection-start-line="19" selection-start-column="25" selection-end-line="19" selection-end-column="25" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/cljs/eckersdorf/workers/subs.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="506">
          <caret line="22" column="36" lean-forward="false" selection-start-line="22" selection-start-column="36" selection-end-line="22" selection-end-column="36" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/cljc/eckersdorf/utils.cljc">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="46">
          <caret line="2" column="19" lean-forward="false" selection-start-line="2" selection-start-column="19" selection-end-line="2" selection-end-column="19" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/cljs/eckersdorf/core.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="690">
          <caret line="32" column="0" lean-forward="false" selection-start-line="32" selection-start-column="0" selection-end-line="32" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/cljs/eckersdorf/workers/events.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/cljs/eckersdorf/workers/ui.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="345">
          <caret line="170" column="95" lean-forward="false" selection-start-line="170" selection-start-column="95" selection-end-line="170" selection-end-column="95" />
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/view/events.cljs" />
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/workers/db.cljs" />
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/db/core.cljs" />
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/cljc/eckersdorf/utils.cljc" />
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/clj/eckersdorf/db/workers.clj" />
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/env/dev/clj/eckersdorf/repl.clj" />
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/init.cljs" />
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/env/dev/clj/eckersdorf/figwheel.clj" />
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/clj/eckersdorf/db/work_schedule.clj" />
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/workers/subs.cljs" />
    <entry file="jar://$MAVEN_REPOSITORY$/reagent/reagent/0.8.0-alpha1/reagent-0.8.0-alpha1.jar!/reagent/ratom.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="92">
          <caret line="4" column="10" lean-forward="false" selection-start-line="4" selection-start-column="10" selection-end-line="4" selection-end-column="10" />
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/view/subs.cljs" />
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/db/events.cljs" />
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/cljc/eckersdorf/db/specs.cljc" />
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/clj/eckersdorf/routes/services.clj" />
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/clj/eckersdorf/routes/services/work_schedule.clj" />
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/clj/eckersdorf/routes/services/workers.clj" />
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/clj/eckersdorf/routes/services/core.clj" />
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/work_schedule/utils.cljs" />
    <entry file="jar://$MAVEN_REPOSITORY$/re-frame/re-frame/0.10.1/re-frame-0.10.1.jar!/re_frame/core.cljc">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="39" column="5" lean-forward="false" selection-start-line="39" selection-start-column="5" selection-end-line="39" selection-end-column="5" />
        </state>
      </provider>
    </entry>
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/workers/events.cljs" />
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/work_schedule/db.cljs" />
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/work_schedule/subs.cljs" />
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/workers/ui.cljs" />
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/flex.cljs" />
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/view/ui.cljs" />
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/work_schedule/ui.cljs" />
    <entry file="file://$USER_HOME$/data/code/Clojure/eckersdorf/src/cljs/eckersdorf/work_schedule/events.cljs" />
    <entry file="file://$PROJECT_DIR$/src/clj/eckersdorf/routes/services.clj" />
    <entry file="file://$PROJECT_DIR$/src/clj/eckersdorf/routes/services/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/eckersdorf/routes/services/work_schedule.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="943">
          <caret line="41" column="48" lean-forward="false" selection-start-line="41" selection-start-column="48" selection-end-line="41" selection-end-column="48" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/eckersdorf/routes/services/workers.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1035">
          <caret line="45" column="52" lean-forward="false" selection-start-line="45" selection-start-column="52" selection-end-line="45" selection-end-column="52" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/cljc/eckersdorf/db/specs.cljc">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="2070">
          <caret line="90" column="25" lean-forward="false" selection-start-line="90" selection-start-column="25" selection-end-line="90" selection-end-column="25" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/eckersdorf/routes/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" lean-forward="false" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/clj/eckersdorf/db/work_schedule.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="220">
          <caret line="44" column="2" lean-forward="false" selection-start-line="44" selection-start-column="2" selection-end-line="44" selection-end-column="2" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/env/dev/clj/eckersdorf/repl.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="289">
          <caret line="57" column="6" lean-forward="false" selection-start-line="57" selection-start-column="6" selection-end-line="57" selection-end-column="6" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/env/dev/clj/eckersdorf/figwheel.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="69">
          <caret line="3" column="10" lean-forward="false" selection-start-line="3" selection-start-column="10" selection-end-line="3" selection-end-column="10" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/cljs/eckersdorf/repl.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="69">
          <caret line="3" column="0" lean-forward="false" selection-start-line="3" selection-start-column="0" selection-end-line="3" selection-end-column="0" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/cljs/eckersdorf/work_schedule/db.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="345">
          <caret line="15" column="25" lean-forward="false" selection-start-line="15" selection-start-column="3" selection-end-line="15" selection-end-column="25" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/cljs/eckersdorf/work_schedule/subs.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="299">
          <caret line="126" column="34" lean-forward="false" selection-start-line="126" selection-start-column="34" selection-end-line="126" selection-end-column="34" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/cljs/eckersdorf/work_schedule/ui.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="276">
          <caret line="129" column="40" lean-forward="false" selection-start-line="129" selection-start-column="40" selection-end-line="129" selection-end-column="40" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/cljs/eckersdorf/work_schedule/events.cljs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="215">
          <caret line="204" column="82" lean-forward="false" selection-start-line="204" selection-start-column="82" selection-end-line="204" selection-end-column="82" />
          <folding />
        </state>
      </provider>
    </entry>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ArtifactsStructureConfigurable.UI">
        <settings>
          <artifact-editor />
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="Copyright.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="FacetStructureConfigurable.UI">
        <settings>
          <last-edited>No facets are configured</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="GlobalLibrariesConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="JdkListConfigurable.UI">
        <settings>
          <last-edited>1.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ModuleStructureConfigurable.UI">
        <settings>
          <last-edited>eckersdorf</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
                <option value="0.6" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectJDKs.UI">
        <settings>
          <last-edited>1.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectLibrariesConfigurable.UI">
        <settings>
          <last-edited>Leiningen: aero:1.1.2</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ScopeChooserConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>